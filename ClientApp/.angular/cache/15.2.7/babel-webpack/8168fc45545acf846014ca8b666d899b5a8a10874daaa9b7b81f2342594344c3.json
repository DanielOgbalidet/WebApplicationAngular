{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = 'api/order';\n  }\n  /*\n  createOrder(newOrder: IOrder): Observable<any> {\n    const createUrl = `${this.baseUrl}/createOrder`;\n    return this._http.post<IOrder>(createUrl, newOrder);\n  }\n  */\n  getOrderById(orderId) {\n    const url = `${this.baseUrl}/${orderId}`;\n    return this._http.get(url);\n  }\n  getOrders(userId) {\n    const url = `${this.baseUrl}/orders/${userId}`;\n    return this._http.get(url);\n  }\n  updateOrder(orderId, newOrder) {\n    const url = `${this.baseUrl}/updateOrder/${orderId}`;\n    newOrder.orderId = orderId;\n    return this._http.put(url, newOrder);\n  }\n  deleteOrder(orderId) {\n    const url = `${this.baseUrl}/deleteOrder/${orderId}`;\n    return this._http.delete(url);\n  }\n}\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,WAAW;EAEY;EAEzC;;;;;;EAOAC,YAAY,CAACC,OAAe;IAC1B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,IAAIF,OAAO,EAAE;IACxC,OAAO,IAAI,CAACF,KAAK,CAACK,GAAG,CAACF,GAAG,CAAC;EAC5B;EAEAG,SAAS,CAACC,MAAc;IACtB,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,WAAWG,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACP,KAAK,CAACK,GAAG,CAAWF,GAAG,CAAC;EACtC;EAEAK,WAAW,CAACN,OAAe,EAAEO,QAAa;IACxC,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,gBAAgBF,OAAO,EAAE;IACpDO,QAAQ,CAACP,OAAO,GAAGA,OAAO;IAC1B,OAAO,IAAI,CAACF,KAAK,CAACU,GAAG,CAAMP,GAAG,EAAEM,QAAQ,CAAC;EAC3C;EAEAE,WAAW,CAACT,OAAe;IACzB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,gBAAgBF,OAAO,EAAE;IACpD,OAAO,IAAI,CAACF,KAAK,CAACY,MAAM,CAACT,GAAG,CAAC;EAC/B;;AAhCWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAe,SAAZf,YAAY;EAAAgB,YAHX;AAAM","names":["OrderService","constructor","_http","getOrderById","orderId","url","baseUrl","get","getOrders","userId","updateOrder","newOrder","put","deleteOrder","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/Hjemmebruker/Desktop/WebApplicationAngular/ClientApp/src/app/Order/orders.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IOrder } from './order';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class OrderService {\n\n  private baseUrl = 'api/order';\n\n  constructor(private _http: HttpClient) { }\n\n  /*\n  createOrder(newOrder: IOrder): Observable<any> {\n    const createUrl = `${this.baseUrl}/createOrder`;\n    return this._http.post<IOrder>(createUrl, newOrder);\n  }\n  */\n\n  getOrderById(orderId: number): Observable<any> {\n    const url = `${this.baseUrl}/${orderId}`;\n    return this._http.get(url);\n  }\n\n  getOrders(userId: number): Observable<IOrder[]> {\n    const url = `${this.baseUrl}/orders/${userId}`;\n    return this._http.get<IOrder[]>(url);\n  }\n\n  updateOrder(orderId: number, newOrder: any): Observable<any> {\n    const url = `${this.baseUrl}/updateOrder/${orderId}`;\n    newOrder.orderId = orderId;\n    return this._http.put<any>(url, newOrder);\n  }\n\n  deleteOrder(orderId: number): Observable<any> {\n    const url = `${this.baseUrl}/deleteOrder/${orderId}`;\n    return this._http.delete(url);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}