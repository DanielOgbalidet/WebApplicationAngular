{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HousesComponent = class HousesComponent {\n  constructor(_router, _houseService) {\n    this._router = _router;\n    this._houseService = _houseService;\n    this.viewTitle = 'Grid';\n    this.displayImage = true;\n    this.houses = [];\n    this._listFilter = '';\n    this.filteredHouses = this.houses;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredHouses = this.performFilter(value);\n  }\n  deleteHouse(house) {\n    const confirmDelete = confirm(`Are you sure you want to delete \"${house.Address}\"`);\n    if (confirmDelete) {\n      this._houseService.deleteHouse(house.HouseId).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this.filteredHouses = this.filteredHouses.filter(i => i !== house);\n        }\n      }, error => {\n        console.error('Error deleting house:', error);\n      });\n    }\n  }\n  getHouses() {\n    this._houseService.getHouses().subscribe(data => {\n      console.log(\"All\", JSON.stringify(data));\n      this.houses = data;\n      this.filteredHouses = this.houses;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.houses.filter(house => house.Address.toLocaleLowerCase().includes(filterBy));\n  }\n  toggleImage() {\n    this.displayImage = !this.displayImage;\n  }\n  navigateToHouseform() {\n    this._router.navigate(['/houseform']);\n  }\n  ngOnInit() {\n    this.getHouses();\n  }\n};\nHousesComponent = __decorate([Component({\n  selector: 'app-houses-component',\n  templateUrl: './houses.component.html',\n  styleUrls: ['./houses.component.css']\n})], HousesComponent);\nexport { HousesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,OAAe,EAAUC,aAA2B;IAApD,YAAO,GAAPD,OAAO;IAAkB,kBAAa,GAAbC,aAAa;IAJ1D,cAAS,GAAW,MAAM;IAC1B,iBAAY,GAAY,IAAI;IAC5B,WAAM,GAAa,EAAE;IAIb,gBAAW,GAAW,EAAE;IAuChC,mBAAc,GAAa,IAAI,CAACC,MAAM;EAzCsC;EAI5E,IAAIC,UAAU;IACZ,OAAO,IAAI,CAACC,WAAW;EACzB;EAEA,IAAID,UAAU,CAACE,KAAa;IAC1B,IAAI,CAACD,WAAW,GAAGC,KAAK;IACxBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,KAAK,CAAC;IAChC,IAAI,CAACG,cAAc,GAAG,IAAI,CAACC,aAAa,CAACJ,KAAK,CAAC;EACjD;EAGAK,WAAW,CAACC,KAAa;IACvB,MAAMC,aAAa,GAAGC,OAAO,CAAC,oCAAoCF,KAAK,CAACG,OAAO,GAAG,CAAC;IACnF,IAAIF,aAAa,EAAE;MACjB,IAAI,CAACX,aAAa,CAACS,WAAW,CAACC,KAAK,CAACI,OAAO,CAAC,CAACC,SAAS,CACpDC,QAAQ,IAAI;QACX,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBZ,OAAO,CAACC,GAAG,CAACU,QAAQ,CAACE,OAAO,CAAC;UAC7B,IAAI,CAACX,cAAc,GAAG,IAAI,CAACA,cAAc,CAACY,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKV,KAAK,CAAC;;MAEtE,CAAC,EACAW,KAAK,IAAI;QACRhB,OAAO,CAACgB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;;EAER;EAGAC,SAAS;IACP,IAAI,CAACtB,aAAa,CAACsB,SAAS,EAAE,CAACP,SAAS,CAACQ,IAAI,IAAG;MAC9ClB,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEkB,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;MACxC,IAAI,CAACtB,MAAM,GAAGsB,IAAI;MAClB,IAAI,CAAChB,cAAc,GAAG,IAAI,CAACN,MAAM;IACnC,CAAC,CACA;EACH;EAIAO,aAAa,CAACkB,QAAgB;IAC5BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAiB,EAAE;IACvC,OAAO,IAAI,CAAC1B,MAAM,CAACkB,MAAM,CAAET,KAAa,IACtCA,KAAK,CAACG,OAAO,CAACc,iBAAiB,EAAE,CAACC,QAAQ,CAACF,QAAQ,CAAC,CAAC;EACzD;EAEAG,WAAW;IACT,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAC,mBAAmB;IACjB,IAAI,CAAChC,OAAO,CAACiC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACvC;EAEAC,QAAQ;IACN,IAAI,CAACX,SAAS,EAAE;EAClB;CACD;AAjEYzB,eAAe,eAN3BD,SAAS,CAAC;EACTsC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GAEWvC,eAAe,CAiE3B;SAjEYA,eAAe","names":["Component","HousesComponent","constructor","_router","_houseService","houses","listFilter","_listFilter","value","console","log","filteredHouses","performFilter","deleteHouse","house","confirmDelete","confirm","Address","HouseId","subscribe","response","success","message","filter","i","error","getHouses","data","JSON","stringify","filterBy","toLocaleLowerCase","includes","toggleImage","displayImage","navigateToHouseform","navigate","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/Leo/Desktop/WebApplicationAngular/WebApplicationAngular/ClientApp/src/app/houses/houses.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IHouse } from './house';\nimport { Router } from '@angular/router';\nimport { HouseService } from './houses.service';\n\n@Component({\n  selector: 'app-houses-component',\n  templateUrl: './houses.component.html',\n  styleUrls: ['./houses.component.css']\n})\n\nexport class HousesComponent implements OnInit {\n  viewTitle: string = 'Grid';\n  displayImage: boolean = true;\n  houses: IHouse[] = [];\n\n  constructor(private _router: Router, private _houseService: HouseService) { }\n\n  private _listFilter: string = '';\n\n  get listFilter(): string {\n    return this._listFilter;\n  }\n\n  set listFilter(value: string) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredHouses = this.performFilter(value);\n  }\n\n  \n  deleteHouse(house: IHouse): void {\n    const confirmDelete = confirm(`Are you sure you want to delete \"${house.Address}\"`);\n    if (confirmDelete) {\n      this._houseService.deleteHouse(house.HouseId).subscribe(\n        (response) => {\n          if (response.success) {\n            console.log(response.message);\n            this.filteredHouses = this.filteredHouses.filter(i => i !== house);\n          }\n        },\n        (error) => {\n          console.error('Error deleting house:', error);\n        });\n    }\n  }\n  \n\n  getHouses(): void {\n    this._houseService.getHouses().subscribe(data => {\n      console.log(\"All\", JSON.stringify(data));\n      this.houses = data;\n      this.filteredHouses = this.houses;\n    }\n    );\n  }\n\n  filteredHouses: IHouse[] = this.houses;\n\n  performFilter(filterBy: string): IHouse[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.houses.filter((house: IHouse) =>\n      house.Address.toLocaleLowerCase().includes(filterBy));\n  }\n\n  toggleImage(): void {\n    this.displayImage = !this.displayImage;\n  }\n\n  navigateToHouseform() {\n    this._router.navigate(['/houseform']);\n  }\n\n  ngOnInit(): void {\n    this.getHouses();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}