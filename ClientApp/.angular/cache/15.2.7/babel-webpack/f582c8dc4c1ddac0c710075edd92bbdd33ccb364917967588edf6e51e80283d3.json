{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../users.service\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" First name can't be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Last name can't be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Address cannot be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Please enter a valid numeric value for number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Please enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Choose a password with atleast 8 characters, atleast one uppercase and lowercase letter, one number and one special character \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Please fill in your details for all of the fields \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(_formbuilder, _router, _userService, _route) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._userService = _userService;\n    this._route = _route;\n    this.submitButton = false;\n    this.userForm = _formbuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      address: ['', Validators.required],\n      number: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]]\n    });\n  }\n  ngOnInit() {\n    console.log(\"register\");\n  }\n  onSubmit() {\n    const newUser = this.userForm.value;\n    this.submitButton = true;\n    this._userService.createUser(newUser).subscribe(response => {\n      if (response.success) {\n        console.log(response.message);\n        sessionStorage.setItem(\"email\", newUser.email);\n        this._router.navigate(['/home']);\n      } else {\n        console.log('User creation failed');\n      }\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register-component\"]],\n  decls: 56,\n  vars: 8,\n  consts: [[1, \"container-fluid\"], [1, \"row\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-6\", \"col-sm-12\"], [1, \"form-group\"], [\"for\", \"firstName\"], [1, \"bi\", \"bi-cash-coin\"], [\"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"lastName\"], [\"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [1, \"col-md-12\", \"col-sm-12\"], [\"for\", \"address\"], [\"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"for\", \"number\"], [\"id\", \"number\", \"formControlName\", \"number\", 1, \"form-control\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"id\", \"register\", \"type\", \"submit\"], [1, \"text-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4)(7, \"b\");\n      i0.ɵɵtext(8, \"First name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵtemplate(11, RegisterComponent_div_11_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"div\", 3)(14, \"label\", 8)(15, \"b\");\n      i0.ɵɵtext(16, \"Last name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 3)(22, \"label\", 11)(23, \"b\");\n      i0.ɵɵtext(24, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 12);\n      i0.ɵɵtemplate(27, RegisterComponent_div_27_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 10)(29, \"div\", 3)(30, \"label\", 13)(31, \"b\");\n      i0.ɵɵtext(32, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 14);\n      i0.ɵɵtemplate(35, RegisterComponent_div_35_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 10)(37, \"div\", 3)(38, \"label\", 15)(39, \"b\");\n      i0.ɵɵtext(40, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"input\", 16);\n      i0.ɵɵtemplate(43, RegisterComponent_div_43_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 10)(45, \"div\", 3)(46, \"label\", 17)(47, \"b\");\n      i0.ɵɵtext(48, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(51, RegisterComponent_div_51_Template, 2, 0, \"div\", 7);\n      i0.ɵɵtemplate(52, RegisterComponent_div_52_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"div\", 10)(54, \"button\", 19);\n      i0.ɵɵtext(55, \"Register\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.userForm.get(\"firstName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.userForm.get(\"firstName\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"lastName\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.userForm.get(\"lastName\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.userForm.get(\"address\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.userForm.get(\"address\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.userForm.get(\"number\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.userForm.get(\"number\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.userForm.get(\"number\")) == null ? null : tmp_4_0.dirty));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_5_0.touched) && ((tmp_5_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_5_0.dirty));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.userForm.get(\"password\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.userForm.get(\"password\")) == null ? null : tmp_6_0.touched) && ((tmp_6_0 = ctx.userForm.get(\"password\")) == null ? null : tmp_6_0.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.invalid && ctx.submitButton);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"h1[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 2.5vh;\\r\\n}\\r\\n\\r\\n.container-fluid[_ngcontent-%COMP%] {\\r\\n  margin-left: 0vw;\\r\\n  padding-top: 3vh;\\r\\n  padding-left: 2vw;\\r\\n  padding-right: 0px;\\r\\n  padding-bottom: 5vh;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: #FFFFF0;\\r\\n  font-family: 'Montserrat', sans-serif;\\r\\n}\\r\\n\\r\\n.row[_ngcontent-%COMP%] {\\r\\n  width: 50%;\\r\\n}\\r\\n\\r\\nlabel[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 1vh;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  margin-bottom: 2vh;\\r\\n  padding: 1.2vh 1.5vw;\\r\\n  display: inline-block;\\r\\n  border: 1px solid #ccc;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  background-color: #A9B388;\\r\\n  color: white;\\r\\n  padding: 14px 20px;\\r\\n  margin: 8px 0;\\r\\n  border: none;\\r\\n  cursor: pointer;\\r\\n  width: 100%;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n  \\r\\n  button[_ngcontent-%COMP%]:hover {\\r\\n    opacity: 0.8;\\r\\n  }\\r\\n\\r\\n#register[_ngcontent-%COMP%] {\\r\\n  margin-top: 2vh;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 420px) {\\r\\n  .row[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlcnMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWix5QkFBeUI7RUFDekIscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixzQkFBc0I7QUFDeEI7O0FBRUEsMEJBQTBCO0FBQzFCO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWixlQUFlO0VBQ2YsV0FBVztFQUNYLGtCQUFrQjtBQUNwQjs7RUFFRSw2QkFBNkI7RUFDN0I7SUFDRSxZQUFZO0VBQ2Q7O0FBRUY7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiOztBQUVBLGlCQUFpQjtBQUNqQjtFQUNFO0lBQ0UsV0FBVztFQUNiO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMi41dmg7XHJcbn1cclxuXHJcbi5jb250YWluZXItZmx1aWQge1xyXG4gIG1hcmdpbi1sZWZ0OiAwdnc7XHJcbiAgcGFkZGluZy10b3A6IDN2aDtcclxuICBwYWRkaW5nLWxlZnQ6IDJ2dztcclxuICBwYWRkaW5nLXJpZ2h0OiAwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDV2aDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGMDtcclxuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4ucm93IHtcclxuICB3aWR0aDogNTAlO1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMXZoO1xyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMnZoO1xyXG4gIHBhZGRpbmc6IDEuMnZoIDEuNXZ3O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi8qIFN0eWxlIGZvciBhbGwgYnV0dG9ucyAqL1xyXG5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNBOUIzODg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDE0cHggMjBweDtcclxuICBtYXJnaW46IDhweCAwO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG4gIC8qIEhvdmVyIGVmZmVjdCBmb3IgYnV0dG9ucyAqL1xyXG4gIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBvcGFjaXR5OiAwLjg7XHJcbiAgfVxyXG5cclxuI3JlZ2lzdGVyIHtcclxuICBtYXJnaW4tdG9wOiAydmg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi8qIFNtYWxsIHNjcmVlbiAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyMHB4KSB7XHJcbiAgLnJvdyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","_formbuilder","_router","_userService","_route","userForm","group","firstName","required","lastName","address","number","pattern","email","password","ngOnInit","console","log","onSubmit","newUser","value","submitButton","createUser","subscribe","response","success","message","sessionStorage","setItem","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\deryj\\source\\repos\\WebApplicationAngular\\ClientApp\\src\\app\\users\\register\\register.component.ts","C:\\Users\\deryj\\source\\repos\\WebApplicationAngular\\ClientApp\\src\\app\\users\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '../users.service';\r\n\r\n@Component({\r\n  selector: 'app-register-component',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\n\r\nexport class RegisterComponent {\r\n  userForm: FormGroup;\r\n  submitButton: boolean = false;\r\n\r\n  constructor(private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _userService: UserService,\r\n    private _route: ActivatedRoute) {\r\n    this.userForm = _formbuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      number: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"register\");\r\n  }\r\n\r\n  onSubmit() {\r\n    const newUser = this.userForm.value;\r\n\r\n    this.submitButton = true;\r\n\r\n    this._userService.createUser(newUser).subscribe(response => {\r\n      if (response.success) {\r\n        console.log(response.message);\r\n        sessionStorage.setItem(\"email\", newUser.email);\r\n        this._router.navigate(['/home']);\r\n      } else {\r\n        console.log('User creation failed');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <h1>\r\n        Register\r\n    </h1>\r\n    <form class=\"row\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    \r\n\r\n        <div class=\"col-md-6 col-sm-12\">\r\n          <div class=\"form-group\">\r\n\r\n\r\n            <label for=\"firstName\"><b>First name</b><i class=\"bi bi-cash-coin\"></i></label>\r\n            <input id=\"firstName\" class=\"form-control\" formControlName=\"firstName\" />\r\n\r\n            <div *ngIf=\"userForm.get('firstName')?.invalid && userForm.get('firstName')?.touched\" class=\"text-danger\">\r\n             First name can't be empty\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"lastName\"><b>Last name</b><i class=\"bi bi-cash-coin\"></i></label>\r\n            <input id=\"lastName\" class=\"form-control\" formControlName=\"lastName\" />\r\n\r\n            <div *ngIf=\"userForm.get('lastName')?.invalid && userForm.get('lastName')?.touched\" class=\"text-danger\">\r\n              Last name can't be empty\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-sm-12\">\r\n            <div class=\"form-group\">\r\n                <label for=\"address\"><b>Address</b><i class=\"bi bi-cash-coin\"></i></label>\r\n                <input id=\"address\" class=\"form-control\" formControlName=\"address\" />\r\n\r\n              <div *ngIf=\"userForm.get('address')?.invalid && userForm.get('address')?.touched\" class=\"text-danger\">\r\n                Address cannot be empty\r\n              </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-sm-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"number\"><b>Number</b><i class=\"bi bi-cash-coin\"></i></label>\r\n            <input id=\"number\" class=\"form-control\" formControlName=\"number\" />\r\n\r\n            <div *ngIf=\"userForm.get('number')?.invalid && (userForm.get('number')?.touched && userForm.get('number')?.dirty)\" class=\"text-danger\">\r\n              Please enter a valid numeric value for number\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"col-md-12 col-sm-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\"><b>Email</b><i class=\"bi bi-cash-coin\"></i></label>\r\n            <input id=\"email\" class=\"form-control\" formControlName=\"email\" />\r\n\r\n            <div *ngIf=\"userForm.get('email')?.invalid && (userForm.get('email')?.touched && userForm.get('email')?.dirty)\" class=\"text-danger\">\r\n              Please enter a valid email\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-sm-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"password\"><b>Password</b><i class=\"bi bi-cash-coin\"></i></label>\r\n            <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" />\r\n          </div>\r\n\r\n          <div *ngIf=\"userForm.get('password')?.invalid && (userForm.get('password')?.touched && userForm.get('password')?.dirty)\" class=\"text-danger\">\r\n            Choose a password with atleast 8 characters, atleast one uppercase and lowercase letter, one number and one special character\r\n          </div>\r\n\r\n\r\n          <div *ngIf=\"userForm.invalid && submitButton\" class=\"text-danger\">\r\n            Please fill in your details for all of the fields\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"col-md-12 col-sm-12\">\r\n            <button id=\"register\" type=\"submit\">Register</button>\r\n\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}