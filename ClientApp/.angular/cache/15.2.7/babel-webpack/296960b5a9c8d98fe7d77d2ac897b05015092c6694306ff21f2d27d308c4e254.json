{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../users.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"strong\");\n    i0.ɵɵtext(2, \"Either your email or password was incorrect. Please try again. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return [\"/register\"];\n};\nexport class LoginComponent {\n  constructor(_router, _userService) {\n    this._router = _router;\n    this._userService = _userService;\n    this.loginFail = false;\n  }\n  onSubmit() {\n    //Check if email and password exsist in our table\n    this._userService.checkLogin(this.email, this.password).subscribe(loggedIn => {\n      if (!loggedIn) {\n        //Show error message if user can't log in\n        this.loginFail = true;\n      } else {\n        //If user log in, a new session is created\n        this.loginFail = false;\n        sessionStorage.setItem(\"email\", this.email);\n        this._router.navigate(['/nav-menu']).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n  ngOnInit() {}\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login-component\"]],\n  decls: 30,\n  vars: 5,\n  consts: [[\"charset\", \"utf-8\"], [\"method\", \"post\", 3, \"ngSubmit\"], [1, \"container\"], [\"class\", \"alert alert-danger box-msg\", \"role\", \"alert\", 4, \"ngIf\"], [\"for\", \"uname\"], [\"type\", \"text\", \"placeholder\", \"Enter Username\", \"name\", \"uname\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"psw\"], [\"type\", \"password\", \"placeholder\", \"Enter Password\", \"name\", \"psw\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [3, \"routerLink\"], [\"type\", \"checkbox\", \"checked\", \"checked\", \"name\", \"remember\"], [1, \"container\", 2, \"background-color\", \"#f1f1f1\"], [\"type\", \"button\", 1, \"cancelbtn\"], [1, \"psw\"], [\"href\", \"#\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"box-msg\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 3, 0, \"div\", 3);\n      i0.ɵɵelementStart(8, \"label\", 4)(9, \"b\");\n      i0.ɵɵtext(10, \"Username\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 6)(13, \"b\");\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 8);\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵtext(19, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"label\");\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵtext(22, \" Remember me \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 11)(24, \"button\", 12);\n      i0.ɵɵtext(25, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"span\", 13);\n      i0.ɵɵtext(27, \"Forgot \");\n      i0.ɵɵelementStart(28, \"a\", 14);\n      i0.ɵɵtext(29, \"password?\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginFail);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i1.RouterLink],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  border: 3px solid #f1f1f1;\\n}\\n\\n\\ninput[type=text][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px 20px;\\n  margin: 8px 0;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  box-sizing: border-box;\\n}\\n\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #04AA6D;\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  width: 100%;\\n}\\n\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    opacity: 0.8;\\n  }\\n\\n\\n.cancelbtn[_ngcontent-%COMP%] {\\n  width: auto;\\n  padding: 10px 18px;\\n  background-color: #f44336;\\n}\\n\\n\\n.imgcontainer[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin: 24px 0 12px 0;\\n}\\n\\n\\nimg.avatar[_ngcontent-%COMP%] {\\n  width: 40%;\\n  border-radius: 50%;\\n}\\n\\n\\n.container[_ngcontent-%COMP%] {\\n  padding: 16px;\\n}\\n\\n\\nspan.psw[_ngcontent-%COMP%] {\\n  float: right;\\n  padding-top: 16px;\\n}\\n\\n\\n@media screen and (max-width: 300px) {\\n  span.psw[_ngcontent-%COMP%] {\\n    display: block;\\n    float: none;\\n  }\\n\\n  .cancelbtn[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlcnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0I7QUFDbEI7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUEsc0JBQXNCO0FBQ3RCO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixzQkFBc0I7QUFDeEI7O0FBRUEsZ0NBQWdDO0FBQ2hDO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWixlQUFlO0VBQ2YsV0FBVztBQUNiOztFQUVFLG1DQUFtQztFQUNuQztJQUNFLFlBQVk7RUFDZDs7QUFFRiw0Q0FBNEM7QUFDNUM7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLHlCQUF5QjtBQUMzQjs7QUFFQSxrREFBa0Q7QUFDbEQ7RUFDRSxrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBLGlCQUFpQjtBQUNqQjtFQUNFLFVBQVU7RUFDVixrQkFBa0I7QUFDcEI7O0FBRUEsOEJBQThCO0FBQzlCO0VBQ0UsYUFBYTtBQUNmOztBQUVBLCtCQUErQjtBQUMvQjtFQUNFLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7O0FBRUEsb0VBQW9FO0FBQ3BFO0VBQ0U7SUFDRSxjQUFjO0lBQ2QsV0FBVztFQUNiOztFQUVBO0lBQ0UsV0FBVztFQUNiO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBCb3JkZXJlZCBmb3JtICovXG5mb3JtIHtcbiAgYm9yZGVyOiAzcHggc29saWQgI2YxZjFmMTtcbn1cblxuLyogRnVsbC13aWR0aCBpbnB1dHMgKi9cbmlucHV0W3R5cGU9dGV4dF0sIGlucHV0W3R5cGU9cGFzc3dvcmRdIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEycHggMjBweDtcbiAgbWFyZ2luOiA4cHggMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4vKiBTZXQgYSBzdHlsZSBmb3IgYWxsIGJ1dHRvbnMgKi9cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNEFBNkQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMTRweCAyMHB4O1xuICBtYXJnaW46IDhweCAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbiAgLyogQWRkIGEgaG92ZXIgZWZmZWN0IGZvciBidXR0b25zICovXG4gIGJ1dHRvbjpob3ZlciB7XG4gICAgb3BhY2l0eTogMC44O1xuICB9XG5cbi8qIEV4dHJhIHN0eWxlIGZvciB0aGUgY2FuY2VsIGJ1dHRvbiAocmVkKSAqL1xuLmNhbmNlbGJ0biB7XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOiAxMHB4IDE4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7XG59XG5cbi8qIENlbnRlciB0aGUgYXZhdGFyIGltYWdlIGluc2lkZSB0aGlzIGNvbnRhaW5lciAqL1xuLmltZ2NvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAyNHB4IDAgMTJweCAwO1xufVxuXG4vKiBBdmF0YXIgaW1hZ2UgKi9cbmltZy5hdmF0YXIge1xuICB3aWR0aDogNDAlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi8qIEFkZCBwYWRkaW5nIHRvIGNvbnRhaW5lcnMgKi9cbi5jb250YWluZXIge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuXG4vKiBUaGUgXCJGb3Jnb3QgcGFzc3dvcmRcIiB0ZXh0ICovXG5zcGFuLnBzdyB7XG4gIGZsb2F0OiByaWdodDtcbiAgcGFkZGluZy10b3A6IDE2cHg7XG59XG5cbi8qIENoYW5nZSBzdHlsZXMgZm9yIHNwYW4gYW5kIGNhbmNlbCBidXR0b24gb24gZXh0cmEgc21hbGwgc2NyZWVucyAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzAwcHgpIHtcbiAgc3Bhbi5wc3cge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsb2F0OiBub25lO1xuICB9XG5cbiAgLmNhbmNlbGJ0biB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAUMA,+BAAuE;IAC7DA,+EAA+D;IAAAA,iBAAS;;;;;;ACDxF,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,OAAe,EACzBC,YAAyB;IADf,YAAO,GAAPD,OAAO;IACjB,iBAAY,GAAZC,YAAY;IAHf,cAAS,GAAG,KAAK;EAGe;EAEvCC,QAAQ;IACN;IACA,IAAI,CAACD,YAAY,CAACE,UAAU,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAI;MAC7E,IAAI,CAACA,QAAQ,EAAE;QACb;QACA,IAAI,CAACC,SAAS,GAAG,IAAI;OACtB,MAAM;QACL;QACA,IAAI,CAACA,SAAS,GAAG,KAAK;QACtBC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,CAACN,KAAK,CAAC;QAC3C,IAAI,CAACJ,OAAO,CAACW,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,MAAK;UAC7CC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAC1B,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;EAEAC,QAAQ,IAER;;AA5BWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3BxB,4BAAM;MAEJA,0BAAwB;MAE1BA,iBAAO;MACPA,4BAAM;MAEEA;QAAA,OAAYyB,cAAU;MAAA,EAAC;MAC3BzB,8BAAuB;MACrBA,+DAEM;MACNA,gCAAmB;MAAGA,yBAAQ;MAAAA,iBAAI;MAClCA,iCAA0F;MAApBA;QAAA;MAAA,EAAmB;MAAzFA,iBAA0F;MAE1FA,iCAAiB;MAAGA,yBAAQ;MAAAA,iBAAI;MAChCA,iCAA+F;MAAvBA;QAAA;MAAA,EAAsB;MAA9FA,iBAA+F;MAE/FA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;MACpCA,kCAAqC;MAAAA,yBAAQ;MAAAA,iBAAS;MACtDA,8BAAO;MACLA,6BAAyD;MAACA,8BAC5D;MAAAA,iBAAQ;MAGVA,gCAAwD;MACdA,uBAAM;MAAAA,iBAAS;MACvDA,iCAAkB;MAAAA,wBAAO;MAAAA,8BAAY;MAAAA,0BAAS;MAAAA,iBAAI;;;MAlB5CA,eAAe;MAAfA,oCAAe;MAIiDA,eAAmB;MAAnBA,mCAAmB;MAGjBA,eAAsB;MAAtBA,sCAAsB;MAGtFA,eAA4B;MAA5BA,uDAA4B","names":["i0","LoginComponent","constructor","_router","_userService","onSubmit","checkLogin","email","password","subscribe","loggedIn","loginFail","sessionStorage","setItem","navigate","then","window","location","reload","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/Hjemmebruker/Desktop/WebApplicationAngular/ClientApp/src/app/users/login/login.component.html","/Users/Hjemmebruker/Desktop/WebApplicationAngular/ClientApp/src/app/users/login/login.component.ts"],"sourcesContent":["<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title></title>\n</head>\n<body>\n\n  <form (ngSubmit)=\"onSubmit()\" method=\"post\">\n    <div class=\"container\">\n      <div *ngIf=\"loginFail\" class=\"alert alert-danger box-msg\" role=\"alert\">\n        <strong>Either your email or password was incorrect. Please try again. </strong>\n      </div>\n      <label for=\"uname\"><b>Username</b></label>\n      <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required [(ngModel)]=\"email\">\n\n      <label for=\"psw\"><b>Password</b></label>\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required [(ngModel)]=\"password\">\n\n      <button type=\"submit\">Login</button>\n      <button [routerLink]=\"['/register']\">Register</button>\n      <label>\n        <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n      </label>\n    </div>\n\n    <div class=\"container\" style=\"background-color:#f1f1f1\">\n      <button type=\"button\" class=\"cancelbtn\">Cancel</button>\n      <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n    </div>\n  </form>\n\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../users.service';\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  email!: string;\n  password!: string;\n  public loginFail = false;\n\n  constructor(private _router: Router,\n    private _userService: UserService) { }\n\n  onSubmit() {\n    //Check if email and password exsist in our table\n    this._userService.checkLogin(this.email, this.password).subscribe((loggedIn) => {\n      if (!loggedIn) {\n        //Show error message if user can't log in\n        this.loginFail = true;\n      } else {\n        //If user log in, a new session is created\n        this.loginFail = false;\n        sessionStorage.setItem(\"email\", this.email);\n        this._router.navigate(['/nav-menu']).then(() => {\n          window.location.reload()\n        });\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}