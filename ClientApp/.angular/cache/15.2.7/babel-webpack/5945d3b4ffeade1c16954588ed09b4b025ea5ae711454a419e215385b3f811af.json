{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../orders.service\";\nconst _c0 = [\"startDate\"];\nconst _c1 = [\"endDate\"];\nexport class OrderformComponent {\n  constructor(_formbuilder, _router, _orderService, _route) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._orderService = _orderService;\n    this._route = _route;\n    this.orderId = -1;\n    this.pricePerNight = 0;\n    this.differenceInDays = 0;\n    this.dateInvalid = false;\n    this.orderForm = _formbuilder.group({\n      orderDate: [null],\n      userId: [null],\n      houseId: [null],\n      startDate: [null],\n      endDate: [null],\n      totalPrice: [null]\n    });\n  }\n  onSubmit() {\n    this.findDifferenceInDays();\n    const newPrice = this.pricePerNight * this.differenceInDays;\n    this.orderForm.patchValue({\n      totalPrice: newPrice\n    });\n    const newOrder = this.orderForm.value;\n    this._orderService.updateOrder(this.orderId, newOrder).subscribe(response => {\n      if (response.success) {\n        console.log(response.message);\n        this._router.navigate(['/Table']);\n      } else {\n        console.log('Order update failed');\n      }\n    });\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      this.orderId = +params['orderId'];\n      this.loadOrderForUpdate(this.orderId);\n    });\n  }\n  loadOrderForUpdate(orderId) {\n    this._orderService.getOrderById(orderId).subscribe(order => {\n      this.orderForm.patchValue({\n        orderDate: order.OrderDate,\n        userId: order.UserId,\n        houseId: order.HouseId,\n        startDate: order.StartDate,\n        endDate: order.EndDate,\n        totalPrice: order.TotalPrice\n      });\n      this.findPricePerNight();\n    }, error => {\n      console.error('Error loading order', error);\n    });\n  }\n  findPricePerNight() {\n    const total = this.orderForm.get(\"totalPrice\")?.value;\n    this.findDifferenceInDays();\n    this.pricePerNight = total / this.differenceInDays;\n  }\n  findDifferenceInDays() {\n    const startDateValue = this.orderForm.get('startDate')?.value;\n    const endDateValue = this.orderForm.get('endDate')?.value;\n    // Turn it into date objects so we can calculate the difference in days\n    const newstartDate = new Date(startDateValue);\n    const newendDate = new Date(endDateValue);\n    // Calculate the difference in milliseconds\n    const differenceInMs = newendDate.getTime() - newstartDate.getTime();\n    // Convert milliseconds to days\n    this.differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));\n  }\n  checkDates() {\n    this.findDifferenceInDays();\n    if (this.differenceInDays < 1) {\n      this.dateInvalid = true;\n    } else {\n      this.dateInvalid = false;\n    }\n  }\n}\nOrderformComponent.ɵfac = function OrderformComponent_Factory(t) {\n  return new (t || OrderformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nOrderformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderformComponent,\n  selectors: [[\"app-orders-houseform\"]],\n  viewQuery: function OrderformComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.startDate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.endDate = _t.first);\n    }\n  },\n  decls: 23,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-12\"], [1, \"form-group\"], [\"for\", \"start\"], [1, \"bi\", \"bi-cash-coin\"], [\"type\", \"date\", \"id\", \"startDate\", \"formControlName\", \"startDate\", 1, \"form-control\", 3, \"change\"], [\"for\", \"end\"], [\"type\", \"date\", \"id\", \"endDate\", \"formControlName\", \"endDate\", 1, \"form-control\", 3, \"change\"], [\"id\", \"save\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"id\", \"cancel\", 1, \"btn\", \"btn-secondary\"]],\n  template: function OrderformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Update order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function OrderformComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4)(7, \"b\");\n      i0.ɵɵtext(8, \"Start date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"change\", function OrderformComponent_Template_input_change_10_listener() {\n        return ctx.checkDates();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"div\", 3)(13, \"label\", 7)(14, \"b\");\n      i0.ɵɵtext(15, \"End date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function OrderformComponent_Template_input_change_17_listener() {\n        return ctx.checkDates();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"button\", 9);\n      i0.ɵɵtext(20, \"Update order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 10);\n      i0.ɵɵtext(22, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"disabled\", ctx.dateInvalid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  margin-left: 2vw;\\n  padding-right: 5vw;\\n  padding-top: 3vh;\\n  padding-left: 0px;\\n  padding-right: 0px;\\n  padding-bottom: 5vh;\\n  margin-right: 2vw;\\n  width: 40%;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n  margin-bottom: 2.5vh;\\n}\\n\\n\\nlabel[_ngcontent-%COMP%] {\\n  margin-bottom: 1vh;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 2vh;\\n  padding: 1.2vh 1.5vw;\\n  display: inline-block;\\n  border: 1px solid #ccc;\\n  box-sizing: border-box;\\n}\\n\\n\\n#save[_ngcontent-%COMP%] {\\n  background-color: #2f78c6;\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  width: 100%;\\n  border-radius: 5px;\\n}\\n\\n  \\n  #save[_ngcontent-%COMP%]:hover {\\n    opacity: 0.8;\\n  }\\n\\n#cancel[_ngcontent-%COMP%] {\\n  \\n  background-color: grey;\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  width: 100%;\\n  border-radius: 5px;\\n}\\n\\n  #cancel[_ngcontent-%COMP%]:hover {\\n    opacity: 0.8;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvT3JkZXIvb3JkZXJmb3JtL29yZGVyZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLG9CQUFvQjtBQUN0Qjs7O0FBR0E7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLHNCQUFzQjtBQUN4Qjs7QUFFQSxnQ0FBZ0M7QUFDaEM7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLGVBQWU7RUFDZixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztFQUVFLG1DQUFtQztFQUNuQztJQUNFLFlBQVk7RUFDZDs7QUFFRjtFQUNFLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLGVBQWU7RUFDZixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztFQUVFO0lBQ0UsWUFBWTtFQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1hcmdpbi1sZWZ0OiAydnc7XG4gIHBhZGRpbmctcmlnaHQ6IDV2dztcbiAgcGFkZGluZy10b3A6IDN2aDtcbiAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDBweDtcbiAgcGFkZGluZy1ib3R0b206IDV2aDtcbiAgbWFyZ2luLXJpZ2h0OiAydnc7XG4gIHdpZHRoOiA0MCU7XG59XG5cbmgxIHtcbiAgbWFyZ2luLWJvdHRvbTogMi41dmg7XG59XG5cblxubGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAxdmg7XG59XG5cbmlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDJ2aDtcbiAgcGFkZGluZzogMS4ydmggMS41dnc7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLyogU2V0IGEgc3R5bGUgZm9yIGFsbCBidXR0b25zICovXG4jc2F2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZjc4YzY7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMTRweCAyMHB4O1xuICBtYXJnaW46IDhweCAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuICAvKiBBZGQgYSBob3ZlciBlZmZlY3QgZm9yIGJ1dHRvbnMgKi9cbiAgI3NhdmU6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuODtcbiAgfVxuXG4jY2FuY2VsIHtcbiAgLyogI2QxMmUzNSovXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMTRweCAyMHB4O1xuICBtYXJnaW46IDhweCAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuICAjY2FuY2VsOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAwLjg7XG4gIH1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;AAWA,OAAM,MAAOA,kBAAkB;EAU7BC,YAAoBC,YAAyB,EACnCC,OAAe,EACfC,aAA2B,EAC3BC,MAAsB;IAHZ,iBAAY,GAAZH,YAAY;IACtB,YAAO,GAAPC,OAAO;IACP,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IARhB,YAAO,GAAW,CAAC,CAAC;IACpB,kBAAa,GAAW,CAAC;IACzB,qBAAgB,GAAW,CAAC;IAC5B,gBAAW,GAAY,KAAK;IAM1B,IAAI,CAACC,SAAS,GAAGJ,YAAY,CAACK,KAAK,CAAC;MAClCC,SAAS,EAAE,CAAC,IAAI,CAAC;MACjBC,MAAM,EAAE,CAAC,IAAI,CAAC;MACdC,OAAO,EAAE,CAAC,IAAI,CAAC;MACfC,SAAS,EAAE,CAAC,IAAI,CAAC;MACjBC,OAAO,EAAE,CAAC,IAAI,CAAC;MACfC,UAAU,EAAE,CAAC,IAAI;KAClB,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;IAE3B,MAAMC,QAAQ,GAAG,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,gBAAgB;IAC3D,IAAI,CAACZ,SAAS,CAACa,UAAU,CAAC;MACxBN,UAAU,EAAEG;KACb,CAAC;IAEF,MAAMI,QAAQ,GAAG,IAAI,CAACd,SAAS,CAACe,KAAK;IAErC,IAAI,CAACjB,aAAa,CAACkB,WAAW,CAAC,IAAI,CAACC,OAAO,EAAEH,QAAQ,CAAC,CACnDI,SAAS,CAACC,QAAQ,IAAG;MACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,OAAO,CAAC;QAC7B,IAAI,CAAC1B,OAAO,CAAC2B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;OAClC,MAAM;QACLH,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;IAEtC,CAAC,CAAC;EACN;EAEAG,QAAQ;IACN,IAAI,CAAC1B,MAAM,CAAC2B,MAAM,CAACR,SAAS,CAACQ,MAAM,IAAG;MACpC,IAAI,CAACT,OAAO,GAAG,CAACS,MAAM,CAAC,SAAS,CAAC;MACjC,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACV,OAAO,CAAC;IACvC,CAAC,CAAC;EACJ;EAGAU,kBAAkB,CAACV,OAAe;IAChC,IAAI,CAACnB,aAAa,CAAC8B,YAAY,CAACX,OAAO,CAAC,CACrCC,SAAS,CACPW,KAAU,IAAI;MACb,IAAI,CAAC7B,SAAS,CAACa,UAAU,CAAC;QACxBX,SAAS,EAAE2B,KAAK,CAACC,SAAS;QAC1B3B,MAAM,EAAE0B,KAAK,CAACE,MAAM;QACpB3B,OAAO,EAAEyB,KAAK,CAACG,OAAO;QACtB3B,SAAS,EAAEwB,KAAK,CAACI,SAAS;QAC1B3B,OAAO,EAAEuB,KAAK,CAACK,OAAO;QACtB3B,UAAU,EAAEsB,KAAK,CAACM;OACnB,CAAC;MACF,IAAI,CAACC,iBAAiB,EAAE;IAC1B,CAAC,EACAC,KAAU,IAAI;MACbhB,OAAO,CAACgB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACJ;EACH;EAEAD,iBAAiB;IACf,MAAME,KAAK,GAAG,IAAI,CAACtC,SAAS,CAACuC,GAAG,CAAC,YAAY,CAAC,EAAExB,KAAK;IACrD,IAAI,CAACN,oBAAoB,EAAE;IAE3B,IAAI,CAACE,aAAa,GAAG2B,KAAK,GAAG,IAAI,CAAC1B,gBAAgB;EACpD;EAEAH,oBAAoB;IAClB,MAAM+B,cAAc,GAAG,IAAI,CAACxC,SAAS,CAACuC,GAAG,CAAC,WAAW,CAAC,EAAExB,KAAK;IAC7D,MAAM0B,YAAY,GAAG,IAAI,CAACzC,SAAS,CAACuC,GAAG,CAAC,SAAS,CAAC,EAAExB,KAAK;IAEzD;IACA,MAAM2B,YAAY,GAAG,IAAIC,IAAI,CAACH,cAAc,CAAC;IAC7C,MAAMI,UAAU,GAAG,IAAID,IAAI,CAACF,YAAY,CAAC;IAEzC;IACA,MAAMI,cAAc,GAAGD,UAAU,CAACE,OAAO,EAAE,GAAGJ,YAAY,CAACI,OAAO,EAAE;IAEpE;IACA,IAAI,CAAClC,gBAAgB,GAAGmC,IAAI,CAACC,IAAI,CAACH,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC3E;EAEAI,UAAU;IACR,IAAI,CAACxC,oBAAoB,EAAE;IAC3B,IAAI,IAAI,CAACG,gBAAgB,GAAG,CAAC,EAAE;MAC7B,IAAI,CAACsC,WAAW,GAAG,IAAI;KACxB,MAAM;MACL,IAAI,CAACA,WAAW,GAAG,KAAK;;EAE5B;;AAtGWxD,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAyD;EAAAC;IAAA;;;;;;;;;;;;;;;MCX/BC,8BAAuB;MACfA,4BAAY;MAAAA,iBAAK;MACrBA,+BAAkE;MAApCA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACjDD,8BAAuB;MAEOA,0BAAU;MAAAA,iBAAI;MAAAA,uBAA+B;MAAAA,iBAAQ;MAC3EA,iCAA6G;MAA1BA;QAAA,OAAUC,gBAAY;MAAA,EAAC;MAA1GD,iBAA6G;MAGrHA,+BAAuB;MAEKA,yBAAQ;MAAAA,iBAAI;MAAAA,wBAA+B;MAAAA,iBAAQ;MACvEA,iCAAyG;MAA1BA;QAAA,OAAUC,gBAAY;MAAA,EAAC;MAAtGD,iBAAyG;MAGjHA,+BAAuB;MAC8DA,6BAAY;MAAAA,iBAAS;MACtGA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAf/DA,eAAuB;MAAvBA,yCAAuB;MAcmCA,gBAAwB;MAAxBA,0CAAwB","names":["OrderformComponent","constructor","_formbuilder","_router","_orderService","_route","orderForm","group","orderDate","userId","houseId","startDate","endDate","totalPrice","onSubmit","findDifferenceInDays","newPrice","pricePerNight","differenceInDays","patchValue","newOrder","value","updateOrder","orderId","subscribe","response","success","console","log","message","navigate","ngOnInit","params","loadOrderForUpdate","getOrderById","order","OrderDate","UserId","HouseId","StartDate","EndDate","TotalPrice","findPricePerNight","error","total","get","startDateValue","endDateValue","newstartDate","Date","newendDate","differenceInMs","getTime","Math","ceil","checkDates","dateInvalid","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["/Users/Leo/Desktop/WebApplicationAngular/WebApplicationAngular/ClientApp/src/app/Order/orderform/orderform.component.ts","/Users/Leo/Desktop/WebApplicationAngular/WebApplicationAngular/ClientApp/src/app/Order/orderform/orderform.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from '../orders.service';\n\n@Component({\n  selector: \"app-orders-houseform\",\n  templateUrl: \"./orderform.component.html\",\n  styleUrls: ['./orderform.component.css']\n})\n\nexport class OrderformComponent {\n  @ViewChild('startDate') startDate!: ElementRef;\n  @ViewChild('endDate') endDate!: ElementRef;\n\n  orderForm: FormGroup;\n  orderId: number = -1;\n  pricePerNight: number = 0;\n  differenceInDays: number = 0;\n  dateInvalid: boolean = false;\n\n  constructor(private _formbuilder: FormBuilder,\n    private _router: Router,\n    private _orderService: OrderService,\n    private _route: ActivatedRoute) {\n    this.orderForm = _formbuilder.group({\n      orderDate: [null],\n      userId: [null],\n      houseId: [null],\n      startDate: [null],\n      endDate: [null],\n      totalPrice: [null]\n    });\n  }\n\n  onSubmit() {\n    this.findDifferenceInDays();\n\n    const newPrice = this.pricePerNight * this.differenceInDays;\n    this.orderForm.patchValue({\n      totalPrice: newPrice,\n    });\n\n    const newOrder = this.orderForm.value;\n\n    this._orderService.updateOrder(this.orderId, newOrder)\n      .subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/Table']);\n        } else {\n          console.log('Order update failed');\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this._route.params.subscribe(params => {\n      this.orderId = +params['orderId'];\n      this.loadOrderForUpdate(this.orderId);\n    })\n  }\n\n\n  loadOrderForUpdate(orderId: number) {\n    this._orderService.getOrderById(orderId)\n      .subscribe(\n        (order: any) => {\n          this.orderForm.patchValue({\n            orderDate: order.OrderDate,\n            userId: order.UserId,\n            houseId: order.HouseId,\n            startDate: order.StartDate,\n            endDate: order.EndDate,\n            totalPrice: order.TotalPrice\n          });\n          this.findPricePerNight();\n        },\n        (error: any) => {\n          console.error('Error loading order', error);\n        }\n    )\n  }\n\n  findPricePerNight() {\n    const total = this.orderForm.get(\"totalPrice\")?.value;\n    this.findDifferenceInDays();\n\n    this.pricePerNight = total / this.differenceInDays;\n  }\n\n  findDifferenceInDays() {\n    const startDateValue = this.orderForm.get('startDate')?.value;\n    const endDateValue = this.orderForm.get('endDate')?.value;\n\n    // Turn it into date objects so we can calculate the difference in days\n    const newstartDate = new Date(startDateValue);\n    const newendDate = new Date(endDateValue);\n\n    // Calculate the difference in milliseconds\n    const differenceInMs = newendDate.getTime() - newstartDate.getTime();\n\n    // Convert milliseconds to days\n    this.differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));\n  }\n\n  checkDates() {\n    this.findDifferenceInDays();\n    if (this.differenceInDays < 1) {\n      this.dateInvalid = true;\n    } else {\n      this.dateInvalid = false;\n    }\n  }\n}\n","<div class=\"container\">\n    <h1>Update order</h1>\n    <form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\" class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label for=\"start\"><b>Start date</b><i class=\"bi bi-cash-coin\"></i></label>\n                <input type=\"date\" id=\"startDate\" class=\"form-control\" formControlName=\"startDate\" (change)=\"checkDates()\" />\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label for=\"end\"><b>End date</b><i class=\"bi bi-cash-coin\"></i></label>\n                <input type=\"date\" id=\"endDate\" class=\"form-control\" formControlName=\"endDate\" (change)=\"checkDates()\" />\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <button id=\"save\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"dateInvalid\">Update order</button>\n            <button id=\"cancel\" class=\"btn btn-secondary\">Cancel</button>\n        </div>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}