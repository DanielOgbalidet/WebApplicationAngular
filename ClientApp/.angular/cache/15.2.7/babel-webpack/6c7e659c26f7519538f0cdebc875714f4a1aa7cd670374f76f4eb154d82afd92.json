{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./houses.service\";\nexport class HouseformComponent {\n  constructor(_formbuilder, _router, _houseService, _route) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._houseService = _houseService;\n    this._route = _route;\n    this.isEditMode = false;\n    this.houseId = -1;\n    this.houseForm = _formbuilder.group({\n      address: ['', Validators.required],\n      price: [0, Validators.required],\n      imageUrl: [''],\n      bedrooms: [0],\n      guests: [0],\n      description: [''],\n      userId: [0]\n    });\n  }\n  onSubmit() {\n    console.log(\"HouseCreate form submitted\");\n    console.log(this.houseForm);\n    const newHouse = this.houseForm.value;\n    if (this.isEditMode) {\n      this._houseService.updateHouse(this.houseId, newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House update failed');\n        }\n      });\n    } else {\n      this._houseService.createHouse(newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House creation failed');\n        }\n      });\n    }\n  }\n  //const createUrl = \"api/house/create\";\n  backToHouses() {\n    this._router.navigate(['/houses']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false;\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true;\n        this.houseId = +params['id'];\n        this.loadHouseForEdit(this.houseId);\n      }\n    });\n  }\n  loadHouseForEdit(houseId) {\n    this._houseService.getHouseById(houseId).subscribe(house => {\n      console.log('retreived house: ', house);\n      this.houseForm.patchValue({\n        price: house.Price,\n        address: house.Address,\n        imageUrl: house.ImageUrl,\n        bedrooms: house.Bedrooms,\n        guests: house.Guests,\n        description: house.Description,\n        userId: house.UserId\n      });\n    }, error => {\n      console.error('Error loading house for edit: ', error);\n    });\n  }\n}\nHouseformComponent.ɵfac = function HouseformComponent_Factory(t) {\n  return new (t || HouseformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HouseService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nHouseformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HouseformComponent,\n  selectors: [[\"app-houses-houseform\"]],\n  decls: 42,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"asp-for\", \"Price\"], [1, \"bi\", \"bi-cash-coin\"], [\"asp-for\", \"Price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"asp-for\", \"Address\"], [\"asp-for\", \"Address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"asp-for\", \"Bedrooms\"], [1, \"bi\", \"bi-door-open\"], [\"asp-for\", \"Bedrooms\", \"formControlName\", \"bedrooms\", 1, \"form-control\"], [\"asp-for\", \"ImageUrl\"], [\"asp-for\", \"ImageUrl\", \"formControlName\", \"imageUrl\", 1, \"form-control\"], [\"asp-for\", \"Guests\"], [1, \"bi\", \"bi-people-fill\"], [\"asp-for\", \"Guests\", \"formControlName\", \"guests\", 1, \"form-control\"], [\"asp-for\", \"Description\"], [1, \"bi\", \"bi-text-left\"], [\"asp-for\", \"Description\", \"maxlength\", \"200\", \"formControlName\", \"description\", 1, \"form-control\"], [\"asp-for\", \"UserId\"], [\"asp-for\", \"UserId\", \"formControlName\", \"userId\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function HouseformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function HouseformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Price \");\n      i0.ɵɵelement(6, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Address \");\n      i0.ɵɵelement(11, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Bedrooms \");\n      i0.ɵɵelement(16, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 10);\n      i0.ɵɵtext(20, \"ImageUrl \");\n      i0.ɵɵelement(21, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 12);\n      i0.ɵɵtext(25, \"Guests \");\n      i0.ɵɵelement(26, \"i\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 15);\n      i0.ɵɵtext(30, \"Description \");\n      i0.ɵɵelement(31, \"i\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 1)(34, \"label\", 18);\n      i0.ɵɵtext(35, \"UserId \");\n      i0.ɵɵelement(36, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 20);\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function HouseformComponent_Template_button_click_40_listener() {\n        return ctx.backToHouses();\n      });\n      i0.ɵɵtext(41, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" house\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.houseForm);\n      i0.ɵɵadvance(36);\n      i0.ɵɵproperty(\"disabled\", ctx.houseForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" house\");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","HouseformComponent","constructor","_formbuilder","_router","_houseService","_route","houseForm","group","address","required","price","imageUrl","bedrooms","guests","description","userId","onSubmit","console","log","newHouse","value","isEditMode","updateHouse","houseId","subscribe","response","success","message","navigate","createHouse","backToHouses","ngOnInit","params","loadHouseForEdit","getHouseById","house","patchValue","Price","Address","ImageUrl","Bedrooms","Guests","Description","UserId","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\danie\\WebApplikasjoner\\WebApplicationAngular\\ClientApp\\src\\app\\houses\\houseform.component.ts","C:\\Users\\danie\\WebApplikasjoner\\WebApplicationAngular\\ClientApp\\src\\app\\houses\\houseform.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HouseService } from './houses.service';\r\n\r\n@Component({\r\n  selector: \"app-houses-houseform\",\r\n  templateUrl: \"./houseform.component.html\"\r\n})\r\n\r\nexport class HouseformComponent {\r\n  houseForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  houseId: number = -1;\r\n\r\n  constructor(private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _houseService: HouseService,\r\n    private _route: ActivatedRoute) {\r\n    this.houseForm = _formbuilder.group({\r\n      address: ['', Validators.required],\r\n      price: [0, Validators.required],\r\n      imageUrl: [''],\r\n      bedrooms: [0],\r\n      guests: [0],\r\n      description: [''],\r\n      userId: [0]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"HouseCreate form submitted\");\r\n    console.log(this.houseForm);\r\n    const newHouse = this.houseForm.value;\r\n    if (this.isEditMode) {\r\n      this._houseService.updateHouse(this.houseId, newHouse)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/houses']);\r\n          }\r\n          else {\r\n            console.log('House update failed');\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this._houseService.createHouse(newHouse).subscribe(response => {\r\n        if (response.success) {\r\n          console.log(response.message);\r\n          this._router.navigate(['/houses']);\r\n        }\r\n        else {\r\n          console.log('House creation failed');\r\n        }\r\n      });\r\n    }\r\n  }\r\n  //const createUrl = \"api/house/create\";\r\n\r\n\r\n  backToHouses() {\r\n    this._router.navigate(['/houses']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false;\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true;\r\n        this.houseId = +params['id'];\r\n        this.loadHouseForEdit(this.houseId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadHouseForEdit(houseId: number) {\r\n    this._houseService.getHouseById(houseId)\r\n      .subscribe(\r\n        (house: any) => {\r\n          console.log('retreived house: ', house);\r\n          this.houseForm.patchValue({\r\n            price: house.Price,\r\n            address: house.Address,\r\n            imageUrl: house.ImageUrl,\r\n            bedrooms: house.Bedrooms,\r\n            guests: house.Guests,\r\n            description: house.Description,\r\n            userId: house.UserId\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading house for edit: ', error);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<h2>{{ isEditMode ? 'Update' : 'Create' }} house</h2>\r\n\r\n<form [formGroup]=\"houseForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label asp-for=\"Price\">Price <i class=\"bi bi-cash-coin\"></i></label>\r\n    <input asp-for=\"Price\" class=\"form-control\" formControlName=\"price\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label asp-for=\"Address\">Address <i class=\"bi bi-cash-coin\"></i></label>\r\n    <input asp-for=\"Address\" class=\"form-control\" formControlName=\"address\" />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label asp-for=\"Bedrooms\">Bedrooms <i class=\"bi bi-door-open\"></i></label>\r\n    <input asp-for=\"Bedrooms\" class=\"form-control\" formControlName=\"bedrooms\" />\r\n\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label asp-for=\"ImageUrl\">ImageUrl <i class=\"bi bi-door-open\"></i></label>\r\n    <input asp-for=\"ImageUrl\" class=\"form-control\" formControlName=\"imageUrl\" />\r\n  </div>\r\n    <div class=\"form-group\">\r\n      <label asp-for=\"Guests\">Guests <i class=\"bi bi-people-fill\"></i></label>\r\n      <input asp-for=\"Guests\" class=\"form-control\" formControlName=\"guests\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label asp-for=\"Description\">Description <i class=\"bi bi-text-left\"></i></label>\r\n      <input asp-for=\"Description\" class=\"form-control\" maxlength=\"200\" formControlName=\"description\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label asp-for=\"UserId\">UserId <i class=\"bi bi-cash-coin\"></i></label>\r\n      <input asp-for=\"UserId\" class=\"form-control\" formControlName=\"userId\" />\r\n    </div>\r\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"houseForm.invalid\">{{ isEditMode ? 'Update' : 'Create' }} house</button>\r\n    <button class=\"btn btn-secondary\" (click)=\"backToHouses()\">Cancel</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}