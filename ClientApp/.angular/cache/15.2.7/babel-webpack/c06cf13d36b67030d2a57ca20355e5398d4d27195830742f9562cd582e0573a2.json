{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet DetailsComponent = class DetailsComponent {\n  constructor(_router, _houseService, _route) {\n    this._router = _router;\n    this._houseService = _houseService;\n    this._route = _route;\n    this.startDateMin = new Date().toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\n    this.endDateMin = new Date(this.startDateMin);\n    this.endDateMinString = '';\n    this.newHouse = {}; // Adjust the type according to your house object structure\n    this.newUser = {};\n    this.houseId = -1;\n    this.numberOfNights = 1;\n    this.totalPrice = 0;\n    this.invalidDates = false;\n    this.numberOfFiles = 0;\n    this.baseImgUrl = \"/assets/images/\";\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      this.houseId = +params['id'];\n      this.getHouse(this.houseId);\n      this.endDateMin.setDate(this.endDateMin.getDate() + 1); // Add one day\n      this.endDateMinString = new Date(this.endDateMin).toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\n    });\n  }\n\n  getHouse(houseId) {\n    this._houseService.getHouseById(houseId).subscribe(house => {\n      console.log('retreived house: ', house);\n      console.log('retreived user: ', house.user);\n      this.newHouse = house;\n      this.newHouse.User = house.user;\n      this.totalPrice = this.newHouse.Price;\n      // this.updateDays();\n      const address = this.newHouse.Address;\n      this.getNumberOfFiles(address);\n      console.log(\"New House: \", this.newHouse);\n    }, error => {\n      console.error('Error loading house for edit: ', error);\n    });\n  }\n  getNumberOfFiles(address) {\n    console.log(\"Address to el manzion: \", address);\n    this._houseService.getNumberOfFiles(address).subscribe(count => {\n      this.numberOfFiles = count;\n      console.log(\"Number of images: \", count);\n    }, error => {\n      console.error(\"Error fetching number of files:\", error);\n    });\n  }\n  isObjectEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n  // Function to handle date changes in the order area\n  updateDays() {\n    const startDateValue = this.startDateInput.nativeElement.value;\n    const endDateValue = this.endDateInput.nativeElement.value;\n    const newstartDate = new Date(startDateValue);\n    const newendDate = new Date(endDateValue);\n    // Calculate the difference in milliseconds\n    const differenceInMs = newendDate.getTime() - newstartDate.getTime();\n    // Convert milliseconds to days\n    const differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));\n    // Check if the date difference is negative, if it is, type out error message\n    if (differenceInDays <= 0) {\n      this.invalidDates = true;\n      this.totalPrice = 0;\n      this.numberOfNights = 0;\n    } else {\n      // Change the values on the screen if values are valid\n      this.invalidDates = false;\n      this.totalPrice = differenceInDays * this.newHouse.Price;\n      this.numberOfNights = differenceInDays;\n    }\n    console.log(\"Date update\");\n    console.log(\"Start date\", startDateValue);\n    console.log(\"End date\", endDateValue);\n    console.log('Difference in days:', differenceInDays);\n  }\n};\n__decorate([ViewChild('startDateInput')], DetailsComponent.prototype, \"startDateInput\", void 0);\n__decorate([ViewChild('endDateInput')], DetailsComponent.prototype, \"endDateInput\", void 0);\nDetailsComponent = __decorate([Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css'] // Array of CSS stylesheets\n})], DetailsComponent);\nexport { DetailsComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","DetailsComponent","constructor","_router","_houseService","_route","Date","toISOString","split","startDateMin","baseImgUrl","ngOnInit","params","subscribe","houseId","getHouse","endDateMin","setDate","getDate","endDateMinString","getHouseById","house","console","log","user","newHouse","User","totalPrice","Price","address","Address","getNumberOfFiles","error","count","numberOfFiles","isObjectEmpty","obj","Object","keys","length","updateDays","startDateValue","startDateInput","nativeElement","value","endDateValue","endDateInput","newstartDate","newendDate","differenceInMs","getTime","differenceInDays","Math","ceil","invalidDates","numberOfNights","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/Hjemmebruker/Desktop/WebApplicationAngular/ClientApp/src/app/houses/Details/details.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { IHouse } from '../house';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HouseService } from '../houses.service';\nimport { IUser } from '../../users/user';\n\n@Component({\n  selector: 'app-details', // Specify the selector for the component\n  templateUrl: './details.component.html', // Path to the HTML template\n  styleUrls: ['./details.component.css'] // Array of CSS stylesheets\n})\n\nexport class DetailsComponent implements OnInit {\n  @ViewChild('startDateInput') startDateInput!: ElementRef;\n  @ViewChild('endDateInput') endDateInput!: ElementRef;\n  startDateMin: string = new Date().toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\n  endDateMin: Date = new Date(this.startDateMin);\n  endDateMinString: string = '';\n  newHouse: IHouse = {} as IHouse; // Adjust the type according to your house object structure\n  newUser: IUser = {} as IUser;\n  houseId: number = -1;\n  numberOfNights = 1;\n  totalPrice = 0;\n  invalidDates: boolean = false;\n  baseImgUrl: string;\n  numberOfFiles: number = 0;\n\n  constructor(private _router: Router,\n    private _houseService: HouseService,\n    private _route: ActivatedRoute) {\n    this.baseImgUrl = \"/assets/images/\";\n  }\n\n  ngOnInit(): void {\n    this._route.params.subscribe(params => {\n      this.houseId = + params['id'];\n      this.getHouse(this.houseId);\n      this.endDateMin.setDate(this.endDateMin.getDate() + 1); // Add one day\n      this.endDateMinString = new Date(this.endDateMin).toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\n    });\n  }\n\n  getHouse(houseId: number) {\n    this._houseService.getHouseById(houseId)\n      .subscribe(\n        (house: any) => {\n          console.log('retreived house: ', house);\n          console.log('retreived user: ', house.user);\n          this.newHouse = house;\n          this.newHouse.User = house.user;\n          this.totalPrice = this.newHouse.Price;\n          // this.updateDays();\n          const address = this.newHouse.Address;\n          this.getNumberOfFiles(address);\n          console.log(\"New House: \", this.newHouse);\n        },\n        (error: any) => {\n          console.error('Error loading house for edit: ', error);\n        }\n      );\n  }\n\n  getNumberOfFiles(address: string) {\n    console.log(\"Address to el manzion: \", address);\n    this._houseService.getNumberOfFiles(address).subscribe(count => {\n      this.numberOfFiles = count;\n      console.log(\"Number of images: \", count);\n    },\n      error => {\n        console.error(\"Error fetching number of files:\", error);\n      });\n  }\n\n  isObjectEmpty(obj: any): boolean {\n    return Object.keys(obj).length === 0;\n  }\n\n  // Function to handle date changes in the order area\n  updateDays(): void {\n    const startDateValue = (this.startDateInput.nativeElement as HTMLInputElement).value;\n    const endDateValue = (this.endDateInput.nativeElement as HTMLInputElement).value;\n    const newstartDate = new Date(startDateValue);\n    const newendDate = new Date(endDateValue);\n\n    // Calculate the difference in milliseconds\n    const differenceInMs = newendDate.getTime() - newstartDate.getTime();\n\n    // Convert milliseconds to days\n    const differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));\n\n\n    // Check if the date difference is negative, if it is, type out error message\n    if (differenceInDays <= 0) {\n      this.invalidDates = true;\n      this.totalPrice = 0;\n      this.numberOfNights = 0;\n    } else {\n      // Change the values on the screen if values are valid\n      this.invalidDates = false;\n      this.totalPrice = differenceInDays * this.newHouse.Price;\n      this.numberOfNights = differenceInDays;\n    }\n\n    console.log(\"Date update\");\n    console.log(\"Start date\", startDateValue);\n    console.log(\"End date\", endDateValue);\n    console.log('Difference in days:', differenceInDays);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}