{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./houses.service\";\nexport class HouseformComponent {\n  constructor(_formbuilder, _router, _houseService, _route) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._houseService = _houseService;\n    this._route = _route;\n    this.isEditMode = false;\n    this.houseId = -1;\n    this.gridImg = null;\n    this.houseForm = _formbuilder.group({\n      address: ['', Validators.required],\n      price: [0, Validators.required],\n      imageUrl: [''],\n      bedrooms: [0],\n      guests: [0],\n      description: [''],\n      userId: [0],\n      gridImg: [null]\n    });\n  }\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files.length > 0) {\n      const imgUrl = fileInput.files[0].name;\n      this.houseForm.patchValue({\n        imageUrl: imgUrl\n      });\n      this.houseForm.patchValue({\n        gridImg: fileInput.files[0]\n      });\n    }\n  }\n  onSubmit() {\n    console.log(\"HouseCreate form submitted\");\n    console.log(this.houseForm);\n    const newHouse = this.houseForm.value;\n    const gridImgControl = this.houseForm.get('gridImg');\n    const addressControl = this.houseForm.get('address');\n    if (gridImgControl && gridImgControl.value && addressControl.value) {\n      const gridImg = gridImgControl.value;\n      const address = addressControl.value;\n      this._houseService.createDirGridImg(gridImg, address).subscribe(dirResponse => {\n        if (dirResponse.success) {\n          console.log(dirResponse.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('Could not create directory');\n        }\n      });\n    } else {\n      console.log(\"No image inserted\");\n    }\n    if (this.isEditMode) {\n      this._houseService.updateHouse(this.houseId, newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House update failed');\n        }\n      });\n    } else {\n      this._houseService.createHouse(newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House creation failed');\n        }\n      });\n    }\n  }\n  backToHouses() {\n    this._router.navigate(['/houses']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false;\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true;\n        this.houseId = +params['id'];\n        this.loadHouseForEdit(this.houseId);\n      }\n    });\n  }\n  loadHouseForEdit(houseId) {\n    this._houseService.getHouseById(houseId).subscribe(house => {\n      console.log('retreived house: ', house);\n      this.houseForm.patchValue({\n        price: house.Price,\n        address: house.Address,\n        imageUrl: house.ImageUrl,\n        bedrooms: house.Bedrooms,\n        guests: house.Guests,\n        description: house.Description,\n        userId: house.UserId\n      });\n    }, error => {\n      console.error('Error loading house for edit: ', error);\n    });\n  }\n}\nHouseformComponent.ɵfac = function HouseformComponent_Factory(t) {\n  return new (t || HouseformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HouseService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nHouseformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HouseformComponent,\n  selectors: [[\"app-houses-houseform\"]],\n  decls: 42,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"price\"], [1, \"bi\", \"bi-cash-coin\"], [\"id\", \"price\", \"formControlName\", \"price\", 1, \"form-control\"], [\"for\", \"address\"], [\"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"for\", \"bedrooms\"], [1, \"bi\", \"bi-door-open\"], [\"id\", \"bedrooms\", \"formControlName\", \"bedrooms\", 1, \"form-control\"], [\"for\", \"gridImg\"], [\"type\", \"file\", \"id\", \"gridImg\", \"formControlName\", \"gridImg\", \"accept\", \"image/*\", 1, \"form-control\", 3, \"change\"], [\"for\", \"guests\"], [1, \"bi\", \"bi-people-fill\"], [\"id\", \"guests\", \"formControlName\", \"guests\", 1, \"form-control\"], [\"for\", \"description\"], [1, \"bi\", \"bi-text-left\"], [\"id\", \"description\", \"maxlength\", \"200\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"userId\"], [\"id\", \"userId\", \"formControlName\", \"userId\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function HouseformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function HouseformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Price \");\n      i0.ɵɵelement(6, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Address \");\n      i0.ɵɵelement(11, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Bedrooms \");\n      i0.ɵɵelement(16, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 10);\n      i0.ɵɵtext(20, \"ImageUrl \");\n      i0.ɵɵelement(21, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 11);\n      i0.ɵɵlistener(\"change\", function HouseformComponent_Template_input_change_22_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 12);\n      i0.ɵɵtext(25, \"Guests \");\n      i0.ɵɵelement(26, \"i\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 15);\n      i0.ɵɵtext(30, \"Description \");\n      i0.ɵɵelement(31, \"i\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 1)(34, \"label\", 18);\n      i0.ɵɵtext(35, \"UserId \");\n      i0.ɵɵelement(36, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 20);\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function HouseformComponent_Template_button_click_40_listener() {\n        return ctx.backToHouses();\n      });\n      i0.ɵɵtext(41, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" house\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.houseForm);\n      i0.ɵɵadvance(36);\n      i0.ɵɵproperty(\"disabled\", ctx.houseForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" house\");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAA0C,gBAAgB;;;;;AASrG,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,YAAyB,EACnCC,OAAe,EACfC,aAA2B,EAC3BC,MAAsB;IAHZ,iBAAY,GAAZH,YAAY;IACtB,YAAO,GAAPC,OAAO;IACP,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IAPhB,eAAU,GAAY,KAAK;IAC3B,YAAO,GAAW,CAAC,CAAC;IACpB,YAAO,GAAgB,IAAI;IAMzB,IAAI,CAACC,SAAS,GAAGJ,YAAY,CAACK,KAAK,CAAC;MAClCC,OAAO,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAClCC,KAAK,EAAE,CAAC,CAAC,EAAEX,UAAU,CAACU,QAAQ,CAAC;MAC/BE,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC,CAAC,CAAC;MACbC,MAAM,EAAE,CAAC,CAAC,CAAC;MACXC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,MAAM,EAAE,CAAC,CAAC,CAAC;MACXC,OAAO,EAAE,CAAC,IAAI;KACf,CAAC;EACJ;EAEAC,cAAc,CAACC,KAAU;IACvB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM;IAC9B,IAAID,SAAS,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC9B,MAAMC,MAAM,GAAGJ,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI;MACtC,IAAI,CAAClB,SAAS,CAACmB,UAAU,CAAC;QAAEd,QAAQ,EAAEY;MAAM,CAAE,CAAC;MAC/C,IAAI,CAACjB,SAAS,CAACmB,UAAU,CAAC;QAAET,OAAO,EAAEG,SAAS,CAACE,KAAK,CAAC,CAAC;MAAC,CAAE,CAAC;;EAE9D;EAGAK,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,SAAS,CAAC;IAC3B,MAAMuB,QAAQ,GAAG,IAAI,CAACvB,SAAS,CAACwB,KAAK;IAErC,MAAMC,cAAc,GAAG,IAAI,CAACzB,SAAS,CAAC0B,GAAG,CAAC,SAAS,CAAC;IACpD,MAAMC,cAAc,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,GAAG,CAAC,SAAS,CAAC;IAEpD,IAAID,cAAc,IAAIA,cAAc,CAACD,KAAK,IAAIG,cAAc,CAACH,KAAK,EAAE;MAClE,MAAMd,OAAO,GAAGe,cAAc,CAACD,KAAK;MACpC,MAAMtB,OAAO,GAAGyB,cAAc,CAACH,KAAK;MAEpC,IAAI,CAAC1B,aAAa,CAAC8B,gBAAgB,CAAClB,OAAO,EAAER,OAAO,CAAC,CAAC2B,SAAS,CAACC,WAAW,IAAG;QAC5E,IAAIA,WAAW,CAACC,OAAO,EAAE;UACvBV,OAAO,CAACC,GAAG,CAACQ,WAAW,CAACE,OAAO,CAAC;UAChC,IAAI,CAACnC,OAAO,CAACoC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;SACnC,MAAM;UACLZ,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;;MAE7C,CAAC,CAAC;KACH,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;;IAGlC,IAAI,IAAI,CAACY,UAAU,EAAE;MACnB,IAAI,CAACpC,aAAa,CAACqC,WAAW,CAAC,IAAI,CAACC,OAAO,EAAEb,QAAQ,CAAC,CACnDM,SAAS,CAACQ,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACN,OAAO,EAAE;UACpBV,OAAO,CAACC,GAAG,CAACe,QAAQ,CAACL,OAAO,CAAC;UAC7B,IAAI,CAACnC,OAAO,CAACoC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;SACnC,MAAM;UACLZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;MAEtC,CAAC,CAAC;KACL,MAAM;MACL,IAAI,CAACxB,aAAa,CAACwC,WAAW,CAACf,QAAQ,CAAC,CAACM,SAAS,CAACQ,QAAQ,IAAG;QAC5D,IAAIA,QAAQ,CAACN,OAAO,EAAE;UACpBV,OAAO,CAACC,GAAG,CAACe,QAAQ,CAACL,OAAO,CAAC;UAC7B,IAAI,CAACnC,OAAO,CAACoC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;SACnC,MAAM;UACLZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;MAExC,CAAC,CAAC;;EAEN;EAGAiB,YAAY;IACV,IAAI,CAAC1C,OAAO,CAACoC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACpC;EAEAO,QAAQ;IACN,IAAI,CAACzC,MAAM,CAAC0C,MAAM,CAACZ,SAAS,CAACY,MAAM,IAAG;MACpC,IAAIA,MAAM,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;QAC/B,IAAI,CAACP,UAAU,GAAG,KAAK;OACxB,MAAM,IAAIO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;QACpC,IAAI,CAACP,UAAU,GAAG,IAAI;QACtB,IAAI,CAACE,OAAO,GAAG,CAACK,MAAM,CAAC,IAAI,CAAC;QAC5B,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACN,OAAO,CAAC;;IAEvC,CAAC,CAAC;EACJ;EAEAM,gBAAgB,CAACN,OAAe;IAC9B,IAAI,CAACtC,aAAa,CAAC6C,YAAY,CAACP,OAAO,CAAC,CACrCP,SAAS,CACPe,KAAU,IAAI;MACbvB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEsB,KAAK,CAAC;MACvC,IAAI,CAAC5C,SAAS,CAACmB,UAAU,CAAC;QACxBf,KAAK,EAAEwC,KAAK,CAACC,KAAK;QAClB3C,OAAO,EAAE0C,KAAK,CAACE,OAAO;QACtBzC,QAAQ,EAAEuC,KAAK,CAACG,QAAQ;QACxBzC,QAAQ,EAAEsC,KAAK,CAACI,QAAQ;QACxBzC,MAAM,EAAEqC,KAAK,CAACK,MAAM;QACpBzC,WAAW,EAAEoC,KAAK,CAACM,WAAW;QAC9BzC,MAAM,EAAEmC,KAAK,CAACO;OACf,CAAC;IACJ,CAAC,EACAC,KAAU,IAAI;MACb/B,OAAO,CAAC+B,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACL;;AAlHW1D,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA2D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,0BAAI;MAAAA,YAA4C;MAAAA,iBAAK;MAErDA,+BAAsD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACjDD,8BAAwB;MACDA,sBAAM;MAAAA,uBAA+B;MAAAA,iBAAQ;MAChEA,2BAAiE;MACrEA,iBAAM;MACNA,8BAAwB;MACCA,yBAAQ;MAAAA,wBAA+B;MAAAA,iBAAQ;MACpEA,4BAAqE;MACzEA,iBAAM;MACNA,+BAAwB;MACEA,0BAAS;MAAAA,wBAA+B;MAAAA,iBAAQ;MACtEA,4BAAuE;MAC3EA,iBAAM;MAENA,+BAAwB;MACCA,0BAAS;MAAAA,wBAA+B;MAAAA,iBAAQ;MACrEA,kCAAoI;MAApCA;QAAA,OAAUC,0BAAsB;MAAA,EAAC;MAAjID,iBAAoI;MAGxIA,+BAAwB;MACAA,wBAAO;MAAAA,yBAAiC;MAAAA,iBAAQ;MACpEA,6BAAmE;MACvEA,iBAAM;MACNA,+BAAwB;MACKA,6BAAY;MAAAA,yBAA+B;MAAAA,iBAAQ;MAC5EA,6BAA6F;MACjGA,iBAAM;MACNA,+BAAwB;MACAA,wBAAO;MAAAA,wBAA+B;MAAAA,iBAAQ;MAClEA,6BAAmE;MACvEA,iBAAM;MACNA,mCAA6E;MAAAA,aAA4C;MAAAA,iBAAS;MAClIA,mCAA2D;MAAzBA;QAAA,OAASC,kBAAc;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;;;MAlC1EA,eAA4C;MAA5CA,yEAA4C;MAE1CA,eAAuB;MAAvBA,yCAAuB;MA+BqBA,gBAA8B;MAA9BA,gDAA8B;MAACA,eAA4C;MAA5CA,yEAA4C","names":["Validators","HouseformComponent","constructor","_formbuilder","_router","_houseService","_route","houseForm","group","address","required","price","imageUrl","bedrooms","guests","description","userId","gridImg","onFileSelected","event","fileInput","target","files","length","imgUrl","name","patchValue","onSubmit","console","log","newHouse","value","gridImgControl","get","addressControl","createDirGridImg","subscribe","dirResponse","success","message","navigate","isEditMode","updateHouse","houseId","response","createHouse","backToHouses","ngOnInit","params","loadHouseForEdit","getHouseById","house","Price","Address","ImageUrl","Bedrooms","Guests","Description","UserId","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/Hjemmebruker/Desktop/WebApplicationAngular/ClientApp/src/app/houses/houseform.component.ts","/Users/Hjemmebruker/Desktop/WebApplicationAngular/ClientApp/src/app/houses/houseform.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HouseService } from './houses.service';\n\n@Component({\n  selector: \"app-houses-houseform\",\n  templateUrl: \"./houseform.component.html\"\n})\n\nexport class HouseformComponent {\n  houseForm: FormGroup;\n  isEditMode: boolean = false;\n  houseId: number = -1;\n  gridImg: File | null = null;\n\n  constructor(private _formbuilder: FormBuilder,\n    private _router: Router,\n    private _houseService: HouseService,\n    private _route: ActivatedRoute) {\n    this.houseForm = _formbuilder.group({\n      address: ['', Validators.required],\n      price: [0, Validators.required],\n      imageUrl: [''],\n      bedrooms: [0],\n      guests: [0],\n      description: [''],\n      userId: [0],\n      gridImg: [null]\n    });\n  }\n\n  onFileSelected(event: any): void {\n    const fileInput = event.target;\n    if (fileInput.files.length > 0) {\n      const imgUrl = fileInput.files[0].name;\n      this.houseForm.patchValue({ imageUrl: imgUrl });\n      this.houseForm.patchValue({ gridImg: fileInput.files[0] });\n    }\n  }\n\n\n  onSubmit() {\n    console.log(\"HouseCreate form submitted\");\n    console.log(this.houseForm);\n    const newHouse = this.houseForm.value;\n\n    const gridImgControl = this.houseForm.get('gridImg');\n    const addressControl = this.houseForm.get('address');\n\n    if (gridImgControl && gridImgControl.value && addressControl.value) {\n      const gridImg = gridImgControl.value;\n      const address = addressControl.value;\n\n      this._houseService.createDirGridImg(gridImg, address).subscribe(dirResponse => {\n        if (dirResponse.success) {\n          console.log(dirResponse.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('Could not create directory');\n        }\n      });\n    } else {\n      console.log(\"No image inserted\");\n    }\n\n    if (this.isEditMode) {\n      this._houseService.updateHouse(this.houseId, newHouse)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message);\n            this._router.navigate(['/houses']);\n          } else {\n            console.log('House update failed');\n          }\n        });\n    } else {\n      this._houseService.createHouse(newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House creation failed');\n        }\n      });\n    }\n  }\n\n\n  backToHouses() {\n    this._router.navigate(['/houses']);\n  }\n\n  ngOnInit(): void {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false;\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true;\n        this.houseId = +params['id'];\n        this.loadHouseForEdit(this.houseId);\n      }\n    });\n  }\n\n  loadHouseForEdit(houseId: number) {\n    this._houseService.getHouseById(houseId)\n      .subscribe(\n        (house: any) => {\n          console.log('retreived house: ', house);\n          this.houseForm.patchValue({\n            price: house.Price,\n            address: house.Address,\n            imageUrl: house.ImageUrl,\n            bedrooms: house.Bedrooms,\n            guests: house.Guests,\n            description: house.Description,\n            userId: house.UserId\n          });\n        },\n        (error: any) => {\n          console.error('Error loading house for edit: ', error);\n        }\n      );\n  }\n\n}\n","<h2>{{ isEditMode ? 'Update' : 'Create' }} house</h2>\n\n<form [formGroup]=\"houseForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"price\">Price <i class=\"bi bi-cash-coin\"></i></label>\n        <input id=\"price\" class=\"form-control\" formControlName=\"price\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"address\">Address <i class=\"bi bi-cash-coin\"></i></label>\n        <input id=\"address\" class=\"form-control\" formControlName=\"address\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"bedrooms\">Bedrooms <i class=\"bi bi-door-open\"></i></label>\n        <input id=\"bedrooms\" class=\"form-control\" formControlName=\"bedrooms\" />\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"gridImg\">ImageUrl <i class=\"bi bi-door-open\"></i></label>\n        <input type=\"file\" id=\"gridImg\" class=\"form-control\" formControlName=\"gridImg\" accept=\"image/*\" (change)=\"onFileSelected($event)\" />\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"guests\">Guests <i class=\"bi bi-people-fill\"></i></label>\n        <input id=\"guests\" class=\"form-control\" formControlName=\"guests\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"description\">Description <i class=\"bi bi-text-left\"></i></label>\n        <input id=\"description\" class=\"form-control\" maxlength=\"200\" formControlName=\"description\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"userId\">UserId <i class=\"bi bi-cash-coin\"></i></label>\n        <input id=\"userId\" class=\"form-control\" formControlName=\"userId\" />\n    </div>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"houseForm.invalid\">{{ isEditMode ? 'Update' : 'Create' }} house</button>\n    <button class=\"btn btn-secondary\" (click)=\"backToHouses()\">Cancel</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}