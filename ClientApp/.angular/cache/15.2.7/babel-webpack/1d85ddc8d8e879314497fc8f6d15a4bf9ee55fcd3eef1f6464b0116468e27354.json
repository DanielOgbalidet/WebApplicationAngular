{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet HouseformComponent = class HouseformComponent {\n  constructor(_formbuilder, _router, _houseService, _route) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._houseService = _houseService;\n    this._route = _route;\n    this.isEditMode = false;\n    this.houseId = -1;\n    this.gridImg = null;\n    this.moreImg = null;\n    this.houseForm = _formbuilder.group({\n      address: ['', Validators.required],\n      price: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\n      imageUrl: [''],\n      bedrooms: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\n      guests: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\n      description: [''],\n      userId: [0],\n      gridImg: [null],\n      moreImg: [[null]]\n    });\n  }\n  onFileSelected(event) {\n    const fileInput = event.target;\n    if (fileInput.files.length > 0) {\n      const imgUrl = fileInput.files[0].name;\n      this.houseForm.patchValue({\n        imageUrl: imgUrl\n      });\n      this.houseForm.patchValue({\n        gridImg: fileInput.files[0]\n      });\n    }\n  }\n  onMoreImgSelected(event) {\n    const moreImgs = event.target;\n    if (moreImgs.files.length > 0) {\n      this.houseForm.patchValue({\n        moreImg: moreImgs.files\n      });\n    }\n  }\n  onSubmit() {\n    const newHouse = this.houseForm.value;\n    const gridImgControl = this.houseForm.get('gridImg');\n    const addressControl = this.houseForm.get('address');\n    const moreImgControl = this.houseForm.get('moreImg');\n    if (addressControl && addressControl.value) {\n      const address = addressControl.value;\n      if (gridImgControl && gridImgControl.value) {\n        const gridImg = gridImgControl.value;\n        this._houseService.createDirGridImg(gridImg, address).subscribe(dirResponse => {\n          if (dirResponse.success) {\n            console.log(dirResponse.message);\n          } else {\n            console.error('Could not create directory');\n          }\n        });\n      }\n      if (moreImgControl && moreImgControl.value) {\n        const images = moreImgControl.value;\n        this._houseService.uploadImages(images, address).subscribe(imgResponse => {\n          if (imgResponse.success) {\n            console.log(imgResponse.message);\n          } else {\n            console.error(\"Images failed to upload\");\n          }\n        });\n      }\n    }\n    if (this.isEditMode) {\n      this._houseService.updateHouse(this.houseId, newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House update failed');\n        }\n      });\n    } else {\n      this._houseService.createHouse(newHouse).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate(['/houses']);\n        } else {\n          console.log('House creation failed');\n        }\n      });\n    }\n  }\n  backToHouses() {\n    this._router.navigate(['/houses']);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params['mode'] === 'create') {\n        this.isEditMode = false;\n      } else if (params['mode'] === 'edit') {\n        this.isEditMode = true;\n        this.houseId = +params['id'];\n        this.loadHouseForEdit(this.houseId);\n      }\n    });\n    this._houseService.showId(sessionStorage.getItem(\"email\")).subscribe(userIdValue => {\n      // Update the userId in the form\n      this.houseForm.get('userId').setValue(userIdValue);\n    }, error => {\n      console.error(\"Error fetching userId:\", error);\n    });\n  }\n  loadHouseForEdit(houseId) {\n    this._houseService.getHouseById(houseId).subscribe(house => {\n      this.houseForm.patchValue({\n        price: house.Price,\n        address: house.Address,\n        imageUrl: house.ImageUrl,\n        bedrooms: house.Bedrooms,\n        guests: house.Guests,\n        description: house.Description,\n        userId: house.user.UserId\n      });\n    }, error => {\n      console.error('Error loading house for edit: ', error);\n    });\n  }\n};\nHouseformComponent = __decorate([Component({\n  selector: \"app-houses-houseform\",\n  templateUrl: \"./houseform.component.html\",\n  styleUrls: ['./houseform.component.css']\n})], HouseformComponent);\nexport { HouseformComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","HouseformComponent","constructor","_formbuilder","_router","_houseService","_route","houseForm","group","address","required","price","pattern","imageUrl","bedrooms","guests","description","userId","gridImg","moreImg","onFileSelected","event","fileInput","target","files","length","imgUrl","name","patchValue","onMoreImgSelected","moreImgs","onSubmit","newHouse","value","gridImgControl","get","addressControl","moreImgControl","createDirGridImg","subscribe","dirResponse","success","console","log","message","error","images","uploadImages","imgResponse","isEditMode","updateHouse","houseId","response","navigate","createHouse","backToHouses","ngOnInit","params","loadHouseForEdit","showId","sessionStorage","getItem","userIdValue","setValue","getHouseById","house","Price","Address","ImageUrl","Bedrooms","Guests","Description","user","UserId","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\danie\\WebApplikasjoner\\WebApplicationAngular\\ClientApp\\src\\app\\houses\\houseform.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HouseService } from './houses.service';\r\n\r\n@Component({\r\n  selector: \"app-houses-houseform\",\r\n  templateUrl: \"./houseform.component.html\",\r\n  styleUrls: ['./houseform.component.css']\r\n})\r\n\r\nexport class HouseformComponent {\r\n  houseForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  houseId: number = -1;\r\n  gridImg: File | null = null;\r\n  moreImg: File[] | null = null;\r\n\r\n  constructor(private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _houseService: HouseService,\r\n    private _route: ActivatedRoute) {\r\n    this.houseForm = _formbuilder.group({\r\n      address: ['', Validators.required],\r\n      price: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\r\n      imageUrl: [''],\r\n      bedrooms: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\r\n      guests: [null, [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)]],\r\n      description: [''],\r\n      userId: [0],\r\n      gridImg: [null],\r\n      moreImg: [[null]]\r\n    });\r\n  }\r\n\r\n  onFileSelected(event: any): void {\r\n    const fileInput = event.target;\r\n    if (fileInput.files.length > 0) {\r\n      const imgUrl = fileInput.files[0].name;\r\n      this.houseForm.patchValue({ imageUrl: imgUrl });\r\n      this.houseForm.patchValue({ gridImg: fileInput.files[0] });\r\n    }\r\n  }\r\n\r\n  onMoreImgSelected(event: any): void {\r\n    const moreImgs = event.target;\r\n    if (moreImgs.files.length > 0) {\r\n      this.houseForm.patchValue({ moreImg: moreImgs.files });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const newHouse = this.houseForm.value;\r\n\r\n    const gridImgControl = this.houseForm.get('gridImg');\r\n    const addressControl = this.houseForm.get('address');\r\n    const moreImgControl = this.houseForm.get('moreImg');\r\n\r\n    if (addressControl && addressControl.value) {\r\n      const address = addressControl.value;\r\n\r\n      if ((gridImgControl && gridImgControl.value)) {\r\n        const gridImg = gridImgControl.value;\r\n\r\n        this._houseService.createDirGridImg(gridImg, address).subscribe(dirResponse => {\r\n          if (dirResponse.success) {\r\n            console.log(dirResponse.message);\r\n          } else {\r\n            console.error('Could not create directory');\r\n          }\r\n        });\r\n      }\r\n\r\n      if (moreImgControl && moreImgControl.value) {\r\n        const images = moreImgControl.value;\r\n        this._houseService.uploadImages(images, address).subscribe(imgResponse => {\r\n          if (imgResponse.success) {\r\n            console.log(imgResponse.message);\r\n          } else {\r\n            console.error(\"Images failed to upload\");\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.isEditMode) {\r\n      this._houseService.updateHouse(this.houseId, newHouse)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate(['/houses']);\r\n          } else {\r\n            console.log('House update failed');\r\n          }\r\n        });\r\n    } else {\r\n      this._houseService.createHouse(newHouse).subscribe(response => {\r\n        if (response.success) {\r\n          console.log(response.message);\r\n          this._router.navigate(['/houses']);\r\n        } else {\r\n          console.log('House creation failed');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  backToHouses() {\r\n    this._router.navigate(['/houses']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params['mode'] === 'create') {\r\n        this.isEditMode = false;\r\n      } else if (params['mode'] === 'edit') {\r\n        this.isEditMode = true;\r\n        this.houseId = +params['id'];\r\n        this.loadHouseForEdit(this.houseId);\r\n      }\r\n    });\r\n\r\n    this._houseService.showId(sessionStorage.getItem(\"email\")!).subscribe(\r\n      (userIdValue: number) => {\r\n        // Update the userId in the form\r\n        this.houseForm.get('userId')!.setValue(userIdValue);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error fetching userId:\", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadHouseForEdit(houseId: number) {\r\n    this._houseService.getHouseById(houseId)\r\n      .subscribe(\r\n        (house: any) => {\r\n          this.houseForm.patchValue({\r\n            price: house.Price,\r\n            address: house.Address,\r\n            imageUrl: house.ImageUrl,\r\n            bedrooms: house.Bedrooms,\r\n            guests: house.Guests,\r\n            description: house.Description,\r\n            userId: house.user.UserId\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading house for edit: ', error);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}