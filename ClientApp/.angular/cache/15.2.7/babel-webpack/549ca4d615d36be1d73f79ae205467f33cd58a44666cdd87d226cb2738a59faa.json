{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../houses.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../shared/convertPipe\";\nconst _c0 = [\"startDateInput\"];\nconst _c1 = [\"endDateInput\"];\nfunction DetailsComponent_div_2_span_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22, 23);\n    i0.ɵɵtext(2, \" The start date must be earlier than end date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DetailsComponent_div_2_tr_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 24)(1, \"th\")(2, \"p\");\n    i0.ɵɵelement(3, \"i\", 25);\n    i0.ɵɵtext(4, \" Number of nights:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"p\", 26, 27);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r4.numberOfNights);\n  }\n}\nfunction DetailsComponent_div_2_tr_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 24)(1, \"th\")(2, \"p\");\n    i0.ɵɵelement(3, \"i\", 28);\n    i0.ɵɵtext(4, \" TOTAL PRICE: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"p\", 29);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r5.totalPrice);\n  }\n}\nfunction DetailsComponent_div_2_tr_56_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 24)(1, \"td\")(2, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function DetailsComponent_div_2_tr_56_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.createOrder());\n    });\n    i0.ɵɵtext(3, \"Order\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4);\n    i0.ɵɵelement(3, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7)(6, \"h1\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"h3\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"convertCurrency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"table\", 9)(14, \"tbody\")(15, \"tr\")(16, \"th\");\n    i0.ɵɵelement(17, \"i\", 10);\n    i0.ɵɵtext(18, \" Bedrooms:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"tr\")(22, \"th\");\n    i0.ɵɵelement(23, \"i\", 11);\n    i0.ɵɵtext(24, \" Guests:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"tr\")(28, \"th\");\n    i0.ɵɵelement(29, \"i\", 12);\n    i0.ɵɵtext(30, \" Owner:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"td\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(33, \"div\", 13)(34, \"div\", 14)(35, \"h3\");\n    i0.ɵɵtext(36, \"Choose dates and order here!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"table\", 9)(38, \"tbody\")(39, \"tr\")(40, \"th\");\n    i0.ɵɵtext(41, \"FROM:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"th\");\n    i0.ɵɵtext(43, \"TO:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(44, \"tr\")(45, \"td\")(46, \"input\", 15, 16);\n    i0.ɵɵlistener(\"change\", function DetailsComponent_div_2_Template_input_change_46_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.updateDays());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"td\")(49, \"input\", 17, 18);\n    i0.ɵɵlistener(\"change\", function DetailsComponent_div_2_Template_input_change_49_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.updateDays());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(51, \"tr\", 19)(52, \"td\");\n    i0.ɵɵtemplate(53, DetailsComponent_div_2_span_53_Template, 3, 0, \"span\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(54, DetailsComponent_div_2_tr_54_Template, 9, 1, \"tr\", 21);\n    i0.ɵɵtemplate(55, DetailsComponent_div_2_tr_55_Template, 8, 1, \"tr\", 21);\n    i0.ɵɵtemplate(56, DetailsComponent_div_2_tr_56_Template, 4, 0, \"tr\", 21);\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.newHouse.ImageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r0.newHouse.ImageUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.newHouse.Address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.newHouse.Description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(12, 18, ctx_r0.newHouse.Price, \"kr.\"));\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r0.newHouse.Bedrooms);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.newHouse.Guests);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate3(\"\", ctx_r0.newHouse.User.FirstName, \" \", ctx_r0.newHouse.User.LastName, \", \", ctx_r0.newHouse.User.Email, \" \");\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"value\", ctx_r0.startDateMin)(\"min\", ctx_r0.startDateMin);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"min\", ctx_r0.endDateMinString)(\"value\", ctx_r0.endDateMinString);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.invalidDates);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.invalidDates);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.invalidDates);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.invalidDates);\n  }\n}\nexport class DetailsComponent {\n  constructor(_router, _houseService, _route) {\n    this._router = _router;\n    this._houseService = _houseService;\n    this._route = _route;\n    // Variables to control the specific house to look at \n    this.startDateMin = new Date().toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\n    this.endDateMin = new Date(this.startDateMin);\n    this.endDateMinString = '';\n    this.newHouse = {}; // Adjust the type according to your house object structure\n    this.newUser = {};\n    this.houseId = -1;\n    this.userId = -1;\n    this.numberOfNights = 1;\n    this.totalPrice = 0;\n    this.invalidDates = false;\n    // Variable to create order\n    this.newOrder = {};\n    this.newOrderUser = {};\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      this.houseId = +params['id'];\n      this.getHouse(this.houseId);\n      this.endDateMin.setDate(this.endDateMin.getDate() + 1); // Add one day\n      this.endDateMinString = new Date(this.endDateMin).toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\n    });\n\n    this._houseService.showId(sessionStorage.getItem(\"email\")).subscribe(userIdValue => {\n      // Update the userId in the form\n      this.userId = userIdValue;\n    }, error => {\n      console.error(\"Error fetching userId:\", error);\n    });\n  }\n  createOrder() {\n    if (sessionStorage.getItem(\"email\") === null) {\n      this._router.navigate(['/login']);\n    }\n    // Creating order object to save in DB\n    this.newOrder.OrderDate = new Date().toISOString().split('T')[0]; // Todays date in ISO format\n    // Temp userId\n    this.newOrder.UserId = 1;\n    this.newOrder.HouseId = this.houseId;\n    this.newOrder.UserId = this.userId;\n    // Get values from input fields (startDate and endDate)\n    const startDateValue = this.startDateInput.nativeElement.value; // Start date input\n    const endDateValue = this.endDateInput.nativeElement.value; // End date input\n    this.newOrder.StartDate = startDateValue;\n    this.newOrder.EndDate = endDateValue;\n    this.newOrder.TotalPrice = this.totalPrice;\n    // Creating order \n    this._houseService.createOrder(this.newOrder).subscribe(response => {\n      if (response.success) {\n        console.log(response.message);\n        this._router.navigate(['/Table']);\n      } else {\n        console.log(\"Order creation failed\");\n      }\n    });\n  }\n  getHouse(houseId) {\n    this._houseService.getHouseById(houseId).subscribe(house => {\n      console.log('retreived house: ', house);\n      console.log('retreived user: ', house.user);\n      this.newHouse = house;\n      this.newHouse.User = house.user;\n      this.totalPrice = this.newHouse.Price;\n      // this.updateDays();\n      console.log(\"New House: \", this.newHouse);\n    }, error => {\n      console.error('Error loading house for edit: ', error);\n    });\n  }\n  isObjectEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n  // Function to handle date changes in the order area\n  updateDays() {\n    const startDateValue = this.startDateInput.nativeElement.value;\n    const endDateValue = this.endDateInput.nativeElement.value;\n    // Turn it into date objects so we can calculate the difference in days\n    const newstartDate = new Date(startDateValue);\n    const newendDate = new Date(endDateValue);\n    // Calculate the difference in milliseconds\n    const differenceInMs = newendDate.getTime() - newstartDate.getTime();\n    // Convert milliseconds to days\n    const differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));\n    // Check if the date difference is negative, if it is, type out error message\n    if (differenceInDays <= 0) {\n      this.invalidDates = true;\n      this.totalPrice = 0;\n      this.numberOfNights = 0;\n    } else {\n      // Change the values on the screen if values are valid\n      this.invalidDates = false;\n      this.totalPrice = differenceInDays * this.newHouse.Price;\n      console.log(\"Updated total price\", this.totalPrice);\n      this.numberOfNights = differenceInDays;\n    }\n    console.log(\"Date update\");\n    console.log(\"Start date\", startDateValue);\n    console.log(\"End date\", endDateValue);\n    console.log('Difference in days:', differenceInDays);\n  }\n}\nDetailsComponent.ɵfac = function DetailsComponent_Factory(t) {\n  return new (t || DetailsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HouseService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DetailsComponent,\n  selectors: [[\"app-details\"]],\n  viewQuery: function DetailsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.startDateInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.endDateInput = _t.first);\n    }\n  },\n  decls: 3,\n  vars: 1,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css\"], [\"class\", \"container-fluid\", \"id\", \"details_container\", 4, \"ngIf\"], [\"id\", \"details_container\", 1, \"container-fluid\"], [1, \"row\"], [\"id\", \"image-part\", 1, \"col-11\", \"col-lg-6\", \"col-md-11\"], [3, \"src\", \"alt\"], [\"id\", \"info-part\", 1, \"col-11\", \"col-lg-6\", \"col-md-11\"], [1, \"inner-card\"], [\"id\", \"description-text\"], [1, \"table\", \"table-borderless\"], [1, \"bi\", \"bi-door-open\"], [1, \"bi\", \"bi-people\"], [1, \"bi\", \"bi-person\"], [1, \"inner\"], [1, \"card\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"trip_start\", \"max\", \"2025-12-31\", 3, \"value\", \"min\", \"change\"], [\"startDateInput\", \"\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"trip_end\", \"max\", \"2025-12-31\", 3, \"min\", \"value\", \"change\"], [\"endDateInput\", \"\"], [\"id\", \"validate\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"class\", \"info\", 4, \"ngIf\"], [1, \"text-danger\"], [\"validationText\", \"\"], [1, \"info\"], [1, \"bi\", \"bi-cloud-sun\"], [\"id\", \"nightsNr\"], [\"nightsNr\", \"\"], [1, \"bi\", \"bi-cash-coin\"], [\"id\", \"totalPrice\"], [\"id\", \"makeOrder\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function DetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"head\");\n      i0.ɵɵelement(1, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, DetailsComponent_div_2_Template, 57, 21, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isObjectEmpty(ctx.newHouse));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ConvertCurrency],\n  styles: [\"h1[_ngcontent-%COMP%], h3[_ngcontent-%COMP%] {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n#image-part[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n  min-height: 100%;\\r\\n  max-height: 100%;\\r\\n  width: 50%;\\r\\n  min-width: 50%;\\r\\n  max-width: 50%;\\r\\n}\\r\\n\\r\\n#info-part[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n  min-height: 100%;\\r\\n  max-height: 100%;\\r\\n  width: 50%;\\r\\n  min-width: 50%;\\r\\n  max-width: 50%;\\r\\n}\\r\\n\\r\\n.card[_ngcontent-%COMP%] {\\r\\n  padding: 3%;\\r\\n  height: 100%;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%] {\\r\\n  padding-left: 0px;\\r\\n}\\r\\n\\r\\n#description-text[_ngcontent-%COMP%] {\\r\\n  margin-top: 2vh;\\r\\n  margin-bottom: 4vh;\\r\\n}\\r\\n\\r\\n.table[_ngcontent-%COMP%]    > [_ngcontent-%COMP%]:not(caption)    > *[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n  padding-left: 0;\\r\\n  background-color: var(--bs-table-bg);\\r\\n  box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);\\r\\n  padding-right: 0.5rem;\\r\\n  padding-top: 1rem;\\r\\n  padding-bottom: 1rem;\\r\\n}\\r\\n\\r\\n.info-part[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n#makeOrder[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n#details_container[_ngcontent-%COMP%] {\\r\\n  padding-right: 5vw;\\r\\n  padding-top: 3%;\\r\\n  padding-left: 0vw;\\r\\n  padding-right: 5vw;\\r\\n  padding-bottom: 5vh;\\r\\n  margin-right: 2vw;\\r\\n  margin-left: 2vw;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#bottom-card[_ngcontent-%COMP%] {\\r\\n  margin-top: 5vh;\\r\\n}\\r\\n\\r\\n.inner[_ngcontent-%COMP%] {\\r\\n  margin-top: 2vh;\\r\\n}\\r\\n\\r\\ninner-card[_ngcontent-%COMP%] {\\r\\n  margin-top: 0px;\\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 992px) {\\r\\n  h1[_ngcontent-%COMP%], h3[_ngcontent-%COMP%] {\\r\\n    margin-top: 2vh;\\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG91c2VzL0RldGFpbHMvZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGNBQWM7RUFDZCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGNBQWM7RUFDZCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCO0FBQ0EsMkRBQTJEO0FBQzNEO0VBQ0UsZUFBZTtFQUNmLG9DQUFvQztFQUNwQyx3REFBd0Q7RUFDeEQscUJBQXFCO0VBQ3JCLGlCQUFpQjtFQUNqQixvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQSxxREFBcUQ7QUFDckQ7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImgxLCBoMyB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbiNpbWFnZS1wYXJ0IHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWluLWhlaWdodDogMTAwJTtcclxuICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgbWluLXdpZHRoOiA1MCU7XHJcbiAgbWF4LXdpZHRoOiA1MCU7XHJcbn1cclxuXHJcbiNpbmZvLXBhcnQge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gIG1heC1oZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBtaW4td2lkdGg6IDUwJTtcclxuICBtYXgtd2lkdGg6IDUwJTtcclxufVxyXG5cclxuLmNhcmQge1xyXG4gIHBhZGRpbmc6IDMlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxudGgge1xyXG4gIHBhZGRpbmctbGVmdDogMHB4O1xyXG59XHJcblxyXG4jZGVzY3JpcHRpb24tdGV4dCB7XHJcbiAgbWFyZ2luLXRvcDogMnZoO1xyXG4gIG1hcmdpbi1ib3R0b206IDR2aDtcclxufVxyXG4vKiBSZW1vdmUgcGFkZGluZy1sZWZ0IG9uIHRoZSB0YWJsZXMsIGZvciBiZXR0ZXIgYWxpZ25tZW50Ki9cclxuLnRhYmxlID4gOm5vdChjYXB0aW9uKSA+ICogPiAqIHtcclxuICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYnMtdGFibGUtYmcpO1xyXG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDk5OTlweCB2YXIoLS1icy10YWJsZS1hY2NlbnQtYmcpO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDAuNXJlbTtcclxuICBwYWRkaW5nLXRvcDogMXJlbTtcclxuICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcclxufVxyXG5cclxuLmluZm8tcGFydCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4jbWFrZU9yZGVyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbiNkZXRhaWxzX2NvbnRhaW5lciB7XHJcbiAgcGFkZGluZy1yaWdodDogNXZ3O1xyXG4gIHBhZGRpbmctdG9wOiAzJTtcclxuICBwYWRkaW5nLWxlZnQ6IDB2dztcclxuICBwYWRkaW5nLXJpZ2h0OiA1dnc7XHJcbiAgcGFkZGluZy1ib3R0b206IDV2aDtcclxuICBtYXJnaW4tcmlnaHQ6IDJ2dztcclxuICBtYXJnaW4tbGVmdDogMnZ3O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4jYm90dG9tLWNhcmQge1xyXG4gIG1hcmdpbi10b3A6IDV2aDtcclxufVxyXG5cclxuLmlubmVyIHtcclxuICBtYXJnaW4tdG9wOiAydmg7XHJcbn1cclxuXHJcbmlubmVyLWNhcmQge1xyXG4gIG1hcmdpbi10b3A6IDBweDtcclxufVxyXG5cclxuLyogTWVkaWEgcXVlcnkgZm9yIHdoZW4gc2NyZWVuIGlzIHNtYWxsZXIgdGhhbiA5OTJweCovXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcclxuICBoMSwgaDMge1xyXG4gICAgbWFyZ2luLXRvcDogMnZoO1xyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DetailsComponent","constructor","_router","_houseService","_route","Date","toISOString","split","startDateMin","ngOnInit","params","subscribe","houseId","getHouse","endDateMin","setDate","getDate","endDateMinString","showId","sessionStorage","getItem","userIdValue","userId","error","console","createOrder","navigate","newOrder","OrderDate","UserId","HouseId","startDateValue","startDateInput","nativeElement","value","endDateValue","endDateInput","StartDate","EndDate","TotalPrice","totalPrice","response","success","log","message","getHouseById","house","user","newHouse","User","Price","isObjectEmpty","obj","Object","keys","length","updateDays","newstartDate","newendDate","differenceInMs","getTime","differenceInDays","Math","ceil","invalidDates","numberOfNights","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\danie\\WebApplikasjoner\\WebApplicationAngular\\ClientApp\\src\\app\\houses\\Details\\details.component.html","C:\\Users\\danie\\WebApplikasjoner\\WebApplicationAngular\\ClientApp\\src\\app\\houses\\Details\\details.component.ts"],"sourcesContent":["<head>\r\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css\" />\r\n</head>\r\n\r\n<div class=\"container-fluid\" id=\"details_container\" *ngIf=\"!isObjectEmpty(newHouse)\">\r\n    <div class=\"row\">\r\n        <div id=\"image-part\" class=\"col-11 col-lg-6 col-md-11\">\r\n            <img src=\"{{ newHouse.ImageUrl }}\" alt=\"{{ newHouse.ImageUrl }}\">\r\n        </div>\r\n        <div id=\"info-part\" class=\"col-11 col-lg-6 col-md-11\">\r\n            <div class=\"inner-card\">\r\n                <h1>{{ newHouse.Address }}</h1>\r\n                <p id=\"description-text\">{{ newHouse.Description }}</p>\r\n                <h3>{{ newHouse.Price | convertCurrency : 'kr.' }}</h3>\r\n                <table class=\"table table-borderless\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th><i class=\"bi bi-door-open\"></i>   Bedrooms:</th>\r\n                            <td>{{ newHouse.Bedrooms }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th><i class=\"bi bi-people\"></i>   Guests:</th>\r\n                            <td>{{ newHouse.Guests }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th><i class=\"bi bi-person\"></i>   Owner:</th>\r\n                            <td>{{ newHouse.User.FirstName }} {{ newHouse.User.LastName }}, {{ newHouse.User.Email }} </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"inner\">\r\n                <div class=\"card\">\r\n                    <h3>Choose dates and order here!</h3>\r\n                    <table class=\"table table-borderless\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>FROM:</th>\r\n                                <th>TO:</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <!-- Input field for start date -->\r\n                                    <input type=\"date\" id=\"startDate\" name=\"trip_start\"\r\n                                           [value]=\"startDateMin\" [min]=\"startDateMin\" max=\"2025-12-31\"\r\n                                           (change)=\"updateDays()\" #startDateInput />\r\n                                </td>\r\n                                <td>\r\n                                    <!-- Input field for end date -->\r\n                                    <input type=\"date\" id=\"endDate\" name=\"trip_end\"\r\n                                           [min]=\"endDateMinString\" [value]=\"endDateMinString\" max=\"2025-12-31\"\r\n                                           (change)=\"updateDays()\" #endDateInput />\r\n                                </td>\r\n                            </tr>\r\n                            <tr id=\"validate\">\r\n                                <td>\r\n                                    <span class=\"text-danger\" #validationText *ngIf=\"invalidDates\">\r\n                                        The start date must be earlier than end date\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr class=\"info\" *ngIf=\"!invalidDates\">\r\n                                <th><p><i class=\"bi bi-cloud-sun\"></i>   Number of nights:</p></th>\r\n                                <td><p id=\"nightsNr\" #nightsNr>{{ numberOfNights }}</p></td>\r\n                            </tr>\r\n                            <tr class=\"info\" *ngIf=\"!invalidDates\">\r\n                                <th><p><i class=\"bi bi-cash-coin\"></i>   TOTAL PRICE: </p></th>\r\n                                <td><p id=\"totalPrice\">{{ totalPrice }}</p></td>\r\n                            </tr>\r\n                            <tr class=\"info\" *ngIf=\"!invalidDates\">\r\n                                <td><button id=\"makeOrder\" class=\"btn btn-primary\" (click)=\"createOrder()\">Order</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { IHouse } from '../house';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HouseService } from '../houses.service';\r\nimport { IUser } from '../../users/user';\r\nimport { IOrder } from '../../Order/order';\r\n\r\n@Component({\r\n  selector: 'app-details', // Specify the selector for the component\r\n  templateUrl: './details.component.html', // Path to the HTML template\r\n  styleUrls: ['./details.component.css'] // Array of CSS stylesheets\r\n})\r\n\r\nexport class DetailsComponent implements OnInit {\r\n  @ViewChild('startDateInput') startDateInput!: ElementRef;\r\n  @ViewChild('endDateInput') endDateInput!: ElementRef;\r\n\r\n  // Variables to control the specific house to look at \r\n  startDateMin: string = new Date().toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\r\n  endDateMin: Date = new Date(this.startDateMin);\r\n  endDateMinString: string = '';\r\n  newHouse: IHouse = {} as IHouse; // Adjust the type according to your house object structure\r\n  newUser: IUser = {} as IUser;\r\n  houseId: number = -1;\r\n  userId: number = -1;\r\n  numberOfNights = 1;\r\n  totalPrice = 0;\r\n  invalidDates: boolean = false;\r\n\r\n  // Variable to create order\r\n  newOrder: IOrder = {} as IOrder;\r\n  newOrderUser: IUser = {} as IUser;\r\n\r\n  constructor(private _router: Router,\r\n    private _houseService: HouseService,\r\n    private _route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      this.houseId = + params['id'];\r\n      this.getHouse(this.houseId);\r\n      this.endDateMin.setDate(this.endDateMin.getDate() + 1); // Add one day\r\n      this.endDateMinString = new Date(this.endDateMin).toISOString().split('T')[0]; // Current date in YYYY-MM-DD format\r\n    });\r\n\r\n    this._houseService.showId(sessionStorage.getItem(\"email\")!).subscribe(\r\n      (userIdValue: number) => {\r\n        // Update the userId in the form\r\n        this.userId = userIdValue;\r\n      },\r\n      (error) => {\r\n        console.error(\"Error fetching userId:\", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  createOrder(): void {\r\n    if (sessionStorage.getItem(\"email\") === null) {\r\n      this._router.navigate(['/login'])\r\n    }\r\n    // Creating order object to save in DB\r\n    this.newOrder.OrderDate = new Date().toISOString().split('T')[0]; // Todays date in ISO format\r\n    // Temp userId\r\n    this.newOrder.UserId = 1;\r\n    this.newOrder.HouseId = this.houseId;\r\n    this.newOrder.UserId = this.userId;\r\n\r\n    // Get values from input fields (startDate and endDate)\r\n    const startDateValue = (this.startDateInput.nativeElement as HTMLInputElement).value; // Start date input\r\n    const endDateValue = (this.endDateInput.nativeElement as HTMLInputElement).value;  // End date input\r\n\r\n    this.newOrder.StartDate = startDateValue;\r\n    this.newOrder.EndDate = endDateValue;\r\n    this.newOrder.TotalPrice = this.totalPrice;\r\n\r\n    // Creating order \r\n    this._houseService.createOrder(this.newOrder)\r\n      .subscribe(response => {\r\n        if (response.success) {\r\n          console.log(response.message);\r\n          this._router.navigate(['/Table'])\r\n        }\r\n        else {\r\n          console.log(\"Order creation failed\");\r\n        }\r\n      });\r\n  }\r\n\r\n  getHouse(houseId: number) {\r\n    this._houseService.getHouseById(houseId)\r\n      .subscribe(\r\n        (house: any) => {\r\n          console.log('retreived house: ', house);\r\n          console.log('retreived user: ', house.user);\r\n          this.newHouse = house;\r\n          this.newHouse.User = house.user;\r\n          this.totalPrice = this.newHouse.Price;\r\n          // this.updateDays();\r\n          console.log(\"New House: \", this.newHouse);\r\n        },\r\n        (error: any) => {\r\n          console.error('Error loading house for edit: ', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  isObjectEmpty(obj: any): boolean {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n\r\n  // Function to handle date changes in the order area\r\n  updateDays(): void {\r\n    const startDateValue = (this.startDateInput.nativeElement as HTMLInputElement).value;\r\n    const endDateValue = (this.endDateInput.nativeElement as HTMLInputElement).value;\r\n\r\n    // Turn it into date objects so we can calculate the difference in days\r\n    const newstartDate = new Date(startDateValue);\r\n    const newendDate = new Date(endDateValue);\r\n\r\n    // Calculate the difference in milliseconds\r\n    const differenceInMs = newendDate.getTime() - newstartDate.getTime();\r\n\r\n    // Convert milliseconds to days\r\n    const differenceInDays = Math.ceil(differenceInMs / (1000 * 60 * 60 * 24));\r\n\r\n\r\n    // Check if the date difference is negative, if it is, type out error message\r\n    if (differenceInDays <= 0) {\r\n      this.invalidDates = true;\r\n      this.totalPrice = 0;\r\n      this.numberOfNights = 0;\r\n    } else {\r\n      // Change the values on the screen if values are valid\r\n      this.invalidDates = false;\r\n      this.totalPrice = differenceInDays * this.newHouse.Price;\r\n      console.log(\"Updated total price\", this.totalPrice);\r\n      this.numberOfNights = differenceInDays;\r\n    }\r\n\r\n    console.log(\"Date update\");\r\n    console.log(\"Start date\", startDateValue);\r\n    console.log(\"End date\", endDateValue);\r\n    console.log('Difference in days:', differenceInDays);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}